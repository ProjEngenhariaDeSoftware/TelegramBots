/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:31:45 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.stickers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile;
import org.telegram.telegrambots.meta.api.objects.InputFile;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UploadStickerFile_ESTest extends UploadStickerFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      Integer integer0 = new Integer(0);
      UploadStickerFile uploadStickerFile1 = uploadStickerFile0.setUserId(integer0);
      try { 
        uploadStickerFile1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // userId can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(2010);
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile(integer0);
      MockFile mockFile0 = new MockFile("user_id", "uploadStickerFile");
      UploadStickerFile uploadStickerFile1 = uploadStickerFile0.setPngSticker((File) mockFile0);
      uploadStickerFile0.validate();
      assertSame(uploadStickerFile0, uploadStickerFile1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      Integer integer0 = uploadStickerFile0.getUserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      Integer integer0 = new Integer((-4238));
      uploadStickerFile0.setUserId(integer0);
      Integer integer1 = uploadStickerFile0.getUserId();
      assertEquals((-4238), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      Integer integer0 = new Integer(643);
      uploadStickerFile0.setUserId(integer0);
      Integer integer1 = uploadStickerFile0.getUserId();
      assertEquals(643, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      uploadStickerFile0.setPngSticker("png_sticker", (InputStream) pipedInputStream0);
      InputFile inputFile0 = uploadStickerFile0.getPngSticker();
      assertEquals("attach://png_sticker", inputFile0.getAttachName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      // Undeclared exception!
      try { 
        uploadStickerFile0.deserializeResponse("{}@aCX3q/q{UX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = null;
      try {
        uploadStickerFile0 = new UploadStickerFile((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      Integer integer0 = new Integer(43);
      uploadStickerFile0.setUserId(integer0);
      try { 
        uploadStickerFile0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PngSticker parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      try { 
        uploadStickerFile0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // userId can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile(integer0);
      try { 
        uploadStickerFile0.deserializeResponse("Unable to deserialize response");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      InputFile inputFile0 = uploadStickerFile0.getPngSticker();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(0);
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile(integer0);
      Integer integer1 = uploadStickerFile0.getUserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile();
      String string0 = uploadStickerFile0.toString();
      assertEquals("UploadStickerFile{userId=null, pngSticker=null}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(0);
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile(integer0);
      // Undeclared exception!
      try { 
        uploadStickerFile0.setPngSticker((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-1693));
      UploadStickerFile uploadStickerFile0 = new UploadStickerFile(integer0);
      try { 
        uploadStickerFile0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // userId can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile", e);
      }
  }
}
