/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 12:42:44 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.updatingmessages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EditMessageText_ESTest extends EditMessageText_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setText("text");
      String string0 = editMessageText1.getText();
      assertEquals("text", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer(0);
      EditMessageText editMessageText1 = editMessageText0.setMessageId(integer0);
      Integer integer1 = editMessageText1.getMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer(1);
      editMessageText0.setMessageId(integer0);
      Integer integer1 = editMessageText0.getMessageId();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer((-39));
      editMessageText0.setMessageId(integer0);
      Integer integer1 = editMessageText0.getMessageId();
      assertEquals((-39), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setInlineMessageId("editmessagetext");
      String string0 = editMessageText1.getInlineMessageId();
      assertEquals("editmessagetext", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setInlineMessageId("");
      String string0 = editMessageText1.getInlineMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setChatId("");
      String string0 = editMessageText1.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      // Undeclared exception!
      try { 
        editMessageText0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      // Undeclared exception!
      try { 
        editMessageText0.deserializeResponse("null array");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer(125);
      Long long0 = new Long(125);
      EditMessageText editMessageText1 = editMessageText0.setChatId(long0);
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      editMessageText1.setText("EditMessageText{chatId=null, messageId=null, inlineMessageId=null, text=, parseMode=null, disableWebPagePreview=null, replyMarkup=null}");
      editMessageText1.setReplyMarkup(inlineKeyboardMarkup0);
      EditMessageText editMessageText2 = editMessageText0.setMessageId(integer0);
      editMessageText2.validate();
      assertEquals("EditMessageText{chatId=null, messageId=null, inlineMessageId=null, text=, parseMode=null, disableWebPagePreview=null, replyMarkup=null}", editMessageText2.getText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer(125);
      Long long0 = new Long(125);
      EditMessageText editMessageText1 = editMessageText0.setChatId(long0);
      editMessageText1.setText("EditMessageText{chatId=null, messageId=null, inlineMessageId=null, text=, parseMode=null, disableWebPagePreview=null, replyMarkup=null}");
      EditMessageText editMessageText2 = editMessageText0.setMessageId(integer0);
      editMessageText2.validate();
      assertEquals("EditMessageText{chatId=null, messageId=null, inlineMessageId=null, text=, parseMode=null, disableWebPagePreview=null, replyMarkup=null}", editMessageText2.getText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer(125);
      editMessageText0.setText("");
      Long long0 = new Long(125);
      editMessageText0.setChatId(long0);
      EditMessageText editMessageText1 = editMessageText0.setMessageId(integer0);
      try { 
        editMessageText1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setInlineMessageId("editmessagetext");
      Integer integer0 = new Integer(718);
      editMessageText1.setMessageId(integer0);
      try { 
        editMessageText1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setInlineMessageId("editmessagetext");
      editMessageText1.setChatId("editmessagetext");
      try { 
        editMessageText1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = new Integer(125);
      Long long0 = new Long(125);
      editMessageText0.setChatId(long0);
      EditMessageText editMessageText1 = editMessageText0.setMessageId(integer0);
      try { 
        editMessageText1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      try { 
        editMessageText0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.enableHtml(true);
      assertSame(editMessageText1, editMessageText0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.enableHtml(false);
      assertSame(editMessageText0, editMessageText1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.enableMarkdown(true);
      assertNull(editMessageText1.getInlineMessageId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.enableMarkdown(false);
      assertNull(editMessageText1.getText());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      editMessageText0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = editMessageText0.getReplyMarkup();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      editMessageText0.setInlineMessageId("editmessagetext");
      try { 
        editMessageText0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      String string0 = editMessageText0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      String string0 = editMessageText0.getMethod();
      assertEquals("editmessagetext", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      editMessageText0.setText("");
      String string0 = editMessageText0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.enableWebPagePreview();
      assertNull(editMessageText1.getText());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.disableWebPagePreview();
      assertNull(editMessageText1.getMessageId());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      String string0 = editMessageText0.getInlineMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Long long0 = new Long(125);
      editMessageText0.setChatId(long0);
      try { 
        editMessageText0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = editMessageText0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      editMessageText0.setChatId("editmessagetext");
      String string0 = editMessageText0.getChatId();
      assertEquals("editmessagetext", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      String string0 = editMessageText0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      String string0 = editMessageText0.toString();
      assertEquals("EditMessageText{chatId=null, messageId=null, inlineMessageId=null, text=null, parseMode=null, disableWebPagePreview=null, replyMarkup=null}", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      Integer integer0 = editMessageText0.getMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      EditMessageText editMessageText1 = editMessageText0.setParseMode("editmessagetext");
      assertNull(editMessageText1.getText());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EditMessageText editMessageText0 = new EditMessageText();
      try { 
        editMessageText0.deserializeResponse("editmessagetext");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText", e);
      }
  }
}
