/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:12:27 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputTextMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedMpeg4Gif;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InlineQueryResultCachedMpeg4Gif_ESTest extends InlineQueryResultCachedMpeg4Gif_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setTitle("\"n");
      String string0 = inlineQueryResultCachedMpeg4Gif1.getTitle();
      assertEquals("\"n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setParseMode("org.telegram.telegrambots.meta.api.objects.games.CallbackGame");
      String string0 = inlineQueryResultCachedMpeg4Gif0.getParseMode();
      assertEquals("org.telegram.telegrambots.meta.api.objects.games.CallbackGame", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setParseMode("");
      String string0 = inlineQueryResultCachedMpeg4Gif0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setMpeg4FileId("");
      String string0 = inlineQueryResultCachedMpeg4Gif1.getMpeg4FileId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setId(":");
      String string0 = inlineQueryResultCachedMpeg4Gif0.getId();
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setId("");
      String string0 = inlineQueryResultCachedMpeg4Gif1.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setCaption("7$rAVB22~1CGB!:");
      String string0 = inlineQueryResultCachedMpeg4Gif0.getCaption();
      assertEquals("7$rAVB22~1CGB!:", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setCaption("");
      String string0 = inlineQueryResultCachedMpeg4Gif0.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setMpeg4FileId("'C3L9>L{TAc");
      inlineQueryResultCachedMpeg4Gif1.setId("'C3L9>L{TAc");
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      linkedList0.add((List<InlineKeyboardButton>) null);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard(linkedList0);
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif2 = inlineQueryResultCachedMpeg4Gif0.setReplyMarkup(inlineKeyboardMarkup1);
      // Undeclared exception!
      try { 
        inlineQueryResultCachedMpeg4Gif2.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setMpeg4FileId("HA2k]?:F");
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif2 = inlineQueryResultCachedMpeg4Gif1.setId("HA2k]?:F");
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif3 = inlineQueryResultCachedMpeg4Gif2.setReplyMarkup(inlineKeyboardMarkup0);
      inlineQueryResultCachedMpeg4Gif3.validate();
      assertEquals("HA2k]?:F", inlineQueryResultCachedMpeg4Gif3.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setInputMessageContent(inputContactMessageContent0);
      inlineQueryResultCachedMpeg4Gif0.setId(":");
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif2 = inlineQueryResultCachedMpeg4Gif1.setMpeg4FileId(":");
      try { 
        inlineQueryResultCachedMpeg4Gif2.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PhoneNumber parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setId("first_name");
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif2 = inlineQueryResultCachedMpeg4Gif1.setMpeg4FileId("");
      try { 
        inlineQueryResultCachedMpeg4Gif2.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Mpeg4FileId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setId("");
      try { 
        inlineQueryResultCachedMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setId("first_name");
      try { 
        inlineQueryResultCachedMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Mpeg4FileId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      try { 
        inlineQueryResultCachedMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setTitle("");
      String string0 = inlineQueryResultCachedMpeg4Gif1.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setInputMessageContent(inputTextMessageContent0);
      InputTextMessageContent inputTextMessageContent1 = (InputTextMessageContent)inlineQueryResultCachedMpeg4Gif1.getInputMessageContent();
      assertNull(inputTextMessageContent1.getDisableWebPagePreview());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = inlineQueryResultCachedMpeg4Gif0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.getType();
      assertEquals("mpeg4_gif", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.toString();
      assertEquals("InlineQueryResultCachedMpeg4Gif{type='mpeg4_gif', id='null', mpeg4FileId='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, parseMode='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineQueryResultCachedMpeg4Gif0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineQueryResultCachedMpeg4Gif0.getReplyMarkup();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.getMpeg4FileId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      InputMessageContent inputMessageContent0 = inlineQueryResultCachedMpeg4Gif0.getInputMessageContent();
      assertNull(inputMessageContent0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setId(":");
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif1 = inlineQueryResultCachedMpeg4Gif0.setMpeg4FileId(":");
      inlineQueryResultCachedMpeg4Gif1.validate();
      assertSame(inlineQueryResultCachedMpeg4Gif0, inlineQueryResultCachedMpeg4Gif1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      inlineQueryResultCachedMpeg4Gif0.setMpeg4FileId(":");
      String string0 = inlineQueryResultCachedMpeg4Gif0.getMpeg4FileId();
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InlineQueryResultCachedMpeg4Gif inlineQueryResultCachedMpeg4Gif0 = new InlineQueryResultCachedMpeg4Gif();
      String string0 = inlineQueryResultCachedMpeg4Gif0.getId();
      assertNull(string0);
  }
}
