/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:43:38 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.updates;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.updates.DeleteWebhook;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeleteWebhook_ESTest extends DeleteWebhook_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeleteWebhook deleteWebhook0 = new DeleteWebhook();
      try { 
        deleteWebhook0.deserializeResponse("2^EV=Bxl");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updates.DeleteWebhook", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeleteWebhook deleteWebhook0 = new DeleteWebhook();
      String string0 = deleteWebhook0.getMethod();
      assertEquals("deleteWebhook", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeleteWebhook deleteWebhook0 = new DeleteWebhook();
      deleteWebhook0.validate();
      assertEquals("deleteWebhook", deleteWebhook0.getMethod());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeleteWebhook deleteWebhook0 = new DeleteWebhook();
      String string0 = deleteWebhook0.toString();
      assertEquals("DeleteWebhook{}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DeleteWebhook deleteWebhook0 = new DeleteWebhook();
      // Undeclared exception!
      try { 
        deleteWebhook0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }
}
