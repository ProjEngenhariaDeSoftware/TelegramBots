/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:31:33 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.send;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.send.SendVoice;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ForceReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SendVoice_ESTest extends SendVoice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Long long0 = new Long(0L);
      SendVoice sendVoice1 = sendVoice0.setChatId(long0);
      assertEquals("0", sendVoice1.getChatId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      MockFile mockFile0 = new MockFile("duration");
      sendVoice0.setVoice((File) mockFile0);
      InputFile inputFile0 = sendVoice0.getVoice();
      assertTrue(inputFile0.isNew());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      InputFile inputFile0 = new InputFile("cIrgK=bvh#(P");
      sendVoice0.setVoice(inputFile0);
      InputFile inputFile1 = sendVoice0.getVoice();
      assertEquals("cIrgK=bvh#(P", inputFile1.getAttachName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = new Integer(0);
      sendVoice0.setReplyToMessageId(integer0);
      Integer integer1 = sendVoice0.getReplyToMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = new Integer(76);
      sendVoice0.setReplyToMessageId(integer0);
      Integer integer1 = sendVoice0.getReplyToMessageId();
      assertEquals(76, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = new Integer((-2920));
      sendVoice0.setReplyToMessageId(integer0);
      Integer integer1 = sendVoice0.getReplyToMessageId();
      assertEquals((-2920), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      ForceReplyKeyboard forceReplyKeyboard0 = new ForceReplyKeyboard();
      SendVoice sendVoice1 = sendVoice0.setReplyMarkup(forceReplyKeyboard0);
      ForceReplyKeyboard forceReplyKeyboard1 = (ForceReplyKeyboard)sendVoice1.getReplyMarkup();
      assertNull(forceReplyKeyboard1.getSelective());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setParseMode("chat_id");
      String string0 = sendVoice0.getParseMode();
      assertEquals("chat_id", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setParseMode("");
      String string0 = sendVoice0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = new Integer(0);
      sendVoice0.setDuration(integer0);
      Integer integer1 = sendVoice0.getDuration();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = new Integer(4);
      SendVoice sendVoice1 = sendVoice0.setDuration(integer0);
      Integer integer1 = sendVoice1.getDuration();
      assertEquals(4, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = new Integer((-5));
      SendVoice sendVoice1 = sendVoice0.setDuration(integer0);
      Integer integer1 = sendVoice1.getDuration();
      assertEquals((-5), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setChatId("caption");
      String string0 = sendVoice0.getChatId();
      assertEquals("caption", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      SendVoice sendVoice1 = sendVoice0.setChatId("");
      String string0 = sendVoice1.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setCaption("");
      String string0 = sendVoice0.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      // Undeclared exception!
      try { 
        sendVoice0.setVoice((InputFile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // voice cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        sendVoice0.setVoice((String) null, (InputStream) mockFileInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // voiceName cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      // Undeclared exception!
      try { 
        sendVoice0.setVoice((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // voice cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      // Undeclared exception!
      try { 
        sendVoice0.setVoice((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // voice cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      try { 
        sendVoice0.deserializeResponse("caption");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendVoice", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setVoice("}ib_Aqt.9");
      ReplyKeyboardMarkup replyKeyboardMarkup0 = new ReplyKeyboardMarkup();
      SendVoice sendVoice1 = sendVoice0.setReplyMarkup(replyKeyboardMarkup0);
      sendVoice1.setChatId("caption");
      sendVoice1.validate();
      assertEquals("caption", sendVoice1.getChatId());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      try { 
        sendVoice0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendVoice", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      // Undeclared exception!
      try { 
        sendVoice0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      ReplyKeyboard replyKeyboard0 = sendVoice0.getReplyMarkup();
      assertNull(replyKeyboard0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SendVoice sendVoice1 = sendVoice0.setVoice("p*tOWn%", (InputStream) mockFileInputStream0);
      assertSame(sendVoice0, sendVoice1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      SendVoice sendVoice1 = sendVoice0.disableNotification();
      Boolean boolean0 = sendVoice1.getDisableNotification();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      String string0 = sendVoice0.toString();
      assertEquals("SendVoice{chatId='null', voice=null, disableNotification=null, replyToMessageId=null, replyMarkup=null, duration=null, caption='null', parseMode='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setChatId("caption");
      try { 
        sendVoice0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Voice parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendVoice", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = sendVoice0.getDuration();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      InputFile inputFile0 = sendVoice0.getVoice();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      String string0 = sendVoice0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      sendVoice0.setCaption("jHLV OO");
      String string0 = sendVoice0.getCaption();
      assertEquals("jHLV OO", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Integer integer0 = sendVoice0.getReplyToMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      SendVoice sendVoice1 = sendVoice0.setVoice("}ib_Aqt.9");
      sendVoice0.setChatId("caption");
      sendVoice1.validate();
      assertEquals("caption", sendVoice1.getChatId());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      String string0 = sendVoice0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      // Undeclared exception!
      try { 
        sendVoice0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      String string0 = sendVoice0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      SendVoice sendVoice1 = sendVoice0.enableNotification();
      Boolean boolean0 = sendVoice1.getDisableNotification();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SendVoice sendVoice0 = new SendVoice();
      Boolean boolean0 = sendVoice0.getDisableNotification();
      assertNull(boolean0);
  }
}
