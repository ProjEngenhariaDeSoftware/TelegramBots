/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 12:48:50 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.Audio;
import org.telegram.telegrambots.meta.api.objects.Chat;
import org.telegram.telegrambots.meta.api.objects.Contact;
import org.telegram.telegrambots.meta.api.objects.Document;
import org.telegram.telegrambots.meta.api.objects.Location;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.MessageEntity;
import org.telegram.telegrambots.meta.api.objects.PhotoSize;
import org.telegram.telegrambots.meta.api.objects.User;
import org.telegram.telegrambots.meta.api.objects.Venue;
import org.telegram.telegrambots.meta.api.objects.Video;
import org.telegram.telegrambots.meta.api.objects.VideoNote;
import org.telegram.telegrambots.meta.api.objects.Voice;
import org.telegram.telegrambots.meta.api.objects.games.Animation;
import org.telegram.telegrambots.meta.api.objects.games.Game;
import org.telegram.telegrambots.meta.api.objects.passport.PassportData;
import org.telegram.telegrambots.meta.api.objects.payments.Invoice;
import org.telegram.telegrambots.meta.api.objects.payments.SuccessfulPayment;
import org.telegram.telegrambots.meta.api.objects.stickers.Sticker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Message_ESTest extends Message_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasAnimation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasPassportData();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasVideoNote();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasContact();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasSuccessfulPayment();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasInvoice();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasPhoto();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasEntities();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasLocation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.isReply();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasVideo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasDocument();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.isCommand();
      assertFalse(message0.hasText());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Message message0 = new Message();
      boolean boolean0 = message0.hasSticker();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Message message0 = new Message();
      List<MessageEntity> list0 = message0.getCaptionEntities();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Message message0 = new Message();
      List<MessageEntity> list0 = message0.getEntities();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getAuthorSignature();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Message message0 = new Message();
      // Undeclared exception!
      try { 
        message0.isGroupMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Message message0 = new Message();
      User user0 = message0.getLeftChatMember();
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Message message0 = new Message();
      User user0 = message0.getForwardFrom();
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Message message0 = new Message();
      Long long0 = message0.getMigrateFromChatId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Message message0 = new Message();
      // Undeclared exception!
      try { 
        message0.isSuperGroupMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Message message0 = new Message();
      Contact contact0 = message0.getContact();
      assertNull(contact0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Message message0 = new Message();
      List<PhotoSize> list0 = message0.getPhoto();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Message message0 = new Message();
      VideoNote videoNote0 = message0.getVideoNote();
      assertNull(videoNote0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Message message0 = new Message();
      Message message1 = message0.getReplyToMessage();
      assertNull(message1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Message message0 = new Message();
      Boolean boolean0 = message0.getGroupchatCreated();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Message message0 = new Message();
      Video video0 = message0.getVideo();
      assertNull(video0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.toString();
      assertEquals("Message{messageId=null, from=null, date=null, chat=null, forwardFrom=null, forwardFromChat=null, forwardDate=null, text='null', entities=null, captionEntities=null, audio=null, document=null, photo=null, sticker=null, video=null, contact=null, location=null, venue=null, pinnedMessage=null, newChatMembers=null, leftChatMember=null, newChatTitle='null', newChatPhoto=null, deleteChatPhoto=null, groupchatCreated=null, replyToMessage=null, voice=null, caption='null', superGroupCreated=null, channelChatCreated=null, migrateToChatId=null, migrateFromChatId=null, editDate=null, game=null, forwardFromMessageId=null, invoice=null, successfulPayment=null, videoNote=null, authorSignature='null', forwardSignature='null', mediaGroupId='null', connectedWebsite='null', passportData=null}", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Message message0 = new Message();
      Boolean boolean0 = message0.getChannelChatCreated();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Message message0 = new Message();
      Game game0 = message0.getGame();
      assertNull(game0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Message message0 = new Message();
      Audio audio0 = message0.getAudio();
      assertNull(audio0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Message message0 = new Message();
      Document document0 = message0.getDocument();
      assertNull(document0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getForwardSignature();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Message message0 = new Message();
      // Undeclared exception!
      try { 
        message0.isChannelMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Message message0 = new Message();
      Invoice invoice0 = message0.getInvoice();
      assertNull(invoice0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Message message0 = new Message();
      Voice voice0 = message0.getVoice();
      assertNull(voice0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Message message0 = new Message();
      Venue venue0 = message0.getVenue();
      assertNull(venue0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Message message0 = new Message();
      Integer integer0 = message0.getForwardDate();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Message message0 = new Message();
      SuccessfulPayment successfulPayment0 = message0.getSuccessfulPayment();
      assertNull(successfulPayment0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Message message0 = new Message();
      Long long0 = message0.getMigrateToChatId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getConnectedWebsite();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Message message0 = new Message();
      Message message1 = message0.getPinnedMessage();
      assertNull(message1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getMediaGroupId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Message message0 = new Message();
      Integer integer0 = message0.getForwardFromMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Message message0 = new Message();
      Integer integer0 = message0.getEditDate();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Message message0 = new Message();
      List<User> list0 = message0.getNewChatMembers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Message message0 = new Message();
      PassportData passportData0 = message0.getPassportData();
      assertNull(passportData0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Message message0 = new Message();
      Integer integer0 = message0.getDate();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Message message0 = new Message();
      User user0 = message0.getFrom();
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Message message0 = new Message();
      Chat chat0 = message0.getChat();
      assertNull(chat0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Message message0 = new Message();
      // Undeclared exception!
      try { 
        message0.isUserMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Message message0 = new Message();
      Chat chat0 = message0.getForwardFromChat();
      assertNull(chat0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Message message0 = new Message();
      String string0 = message0.getNewChatTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Message message0 = new Message();
      Animation animation0 = message0.getAnimation();
      assertNull(animation0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Message message0 = new Message();
      Sticker sticker0 = message0.getSticker();
      assertNull(sticker0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Message message0 = new Message();
      Location location0 = message0.getLocation();
      assertNull(location0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Message message0 = new Message();
      List<PhotoSize> list0 = message0.getNewChatPhoto();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Message message0 = new Message();
      Integer integer0 = message0.getMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Message message0 = new Message();
      // Undeclared exception!
      try { 
        message0.getChatId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Message message0 = new Message();
      Boolean boolean0 = message0.getSuperGroupCreated();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Message message0 = new Message();
      Boolean boolean0 = message0.getDeleteChatPhoto();
      assertNull(boolean0);
  }
}
