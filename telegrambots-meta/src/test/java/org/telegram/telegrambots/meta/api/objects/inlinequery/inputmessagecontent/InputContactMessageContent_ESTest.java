/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:30:29 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InputContactMessageContent_ESTest extends InputContactMessageContent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setVCard("v/BeP");
      String string0 = inputContactMessageContent1.getVCard();
      assertEquals("v/BeP", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setVCard("");
      String string0 = inputContactMessageContent1.getVCard();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      inputContactMessageContent0.setPhoneNumber("syrT8w4hl");
      String string0 = inputContactMessageContent0.getPhoneNumber();
      assertEquals("syrT8w4hl", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      inputContactMessageContent0.setPhoneNumber("");
      String string0 = inputContactMessageContent0.getPhoneNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      inputContactMessageContent0.setLastName("b.4/CJPc");
      String string0 = inputContactMessageContent0.getLastName();
      assertEquals("b.4/CJPc", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      inputContactMessageContent0.setLastName("");
      String string0 = inputContactMessageContent0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setFirstName("sT4kL;vWS");
      String string0 = inputContactMessageContent1.getFirstName();
      assertEquals("sT4kL;vWS", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setFirstName("");
      String string0 = inputContactMessageContent1.getFirstName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setPhoneNumber("ImNYzpFW*V4");
      inputContactMessageContent1.setFirstName("");
      try { 
        inputContactMessageContent0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // FirstName parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      inputContactMessageContent0.setPhoneNumber("");
      try { 
        inputContactMessageContent0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PhoneNumber parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      try { 
        inputContactMessageContent0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PhoneNumber parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      String string0 = inputContactMessageContent0.toString();
      assertEquals("InputContactMessageContent{phoneNumber='null', firstName='null', lastName='null', vCard='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      String string0 = inputContactMessageContent0.getPhoneNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      String string0 = inputContactMessageContent0.getFirstName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setPhoneNumber("/");
      try { 
        inputContactMessageContent1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // FirstName parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputContactMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      String string0 = inputContactMessageContent0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      InputContactMessageContent inputContactMessageContent1 = inputContactMessageContent0.setFirstName("/");
      InputContactMessageContent inputContactMessageContent2 = inputContactMessageContent0.setPhoneNumber("/");
      inputContactMessageContent2.validate();
      assertSame(inputContactMessageContent2, inputContactMessageContent1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InputContactMessageContent inputContactMessageContent0 = new InputContactMessageContent();
      String string0 = inputContactMessageContent0.getVCard();
      assertNull(string0);
  }
}
