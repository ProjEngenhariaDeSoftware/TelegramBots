/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:08:31 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.games;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetGameHighScores_ESTest extends GetGameHighScores_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      // Undeclared exception!
      try { 
        getGameHighScores0.deserializeResponse("null");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Long long0 = new Long(2057L);
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setChatId(long0);
      assertSame(getGameHighScores0, getGameHighScores1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(0);
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setUserId(integer0);
      Integer integer1 = getGameHighScores1.getUserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(2);
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setUserId(integer0);
      Integer integer1 = getGameHighScores1.getUserId();
      assertEquals(2, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer((-1855));
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setUserId(integer0);
      Integer integer1 = getGameHighScores1.getUserId();
      assertEquals((-1855), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(0);
      getGameHighScores0.setMessageId(integer0);
      Integer integer1 = getGameHighScores0.getMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(45);
      getGameHighScores0.setMessageId(integer0);
      Integer integer1 = getGameHighScores0.getMessageId();
      assertEquals(45, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer((-2101));
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setMessageId(integer0);
      Integer integer1 = getGameHighScores1.getMessageId();
      assertEquals((-2101), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setInlineMessageId("getGameHighScores");
      String string0 = getGameHighScores1.getInlineMessageId();
      assertEquals("getGameHighScores", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setInlineMessageId("");
      String string0 = getGameHighScores1.getInlineMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      getGameHighScores0.setChatId("getGameHighScores");
      String string0 = getGameHighScores0.getChatId();
      assertEquals("getGameHighScores", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      getGameHighScores0.setChatId("");
      String string0 = getGameHighScores0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      try { 
        getGameHighScores0.deserializeResponse("getGameHighScores");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setInlineMessageId("");
      Integer integer0 = new Integer(116);
      GetGameHighScores getGameHighScores2 = getGameHighScores1.setUserId(integer0);
      getGameHighScores2.setMessageId(integer0);
      try { 
        getGameHighScores0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(41);
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setMessageId(integer0);
      GetGameHighScores getGameHighScores2 = getGameHighScores1.setChatId(">gWx");
      GetGameHighScores getGameHighScores3 = getGameHighScores2.setUserId(integer0);
      getGameHighScores3.validate();
      assertEquals(">gWx", getGameHighScores3.getChatId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(41);
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setChatId(">gWx");
      GetGameHighScores getGameHighScores2 = getGameHighScores1.setUserId(integer0);
      try { 
        getGameHighScores2.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      try { 
        getGameHighScores0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // UserId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = new Integer(41);
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setUserId(integer0);
      try { 
        getGameHighScores1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = getGameHighScores0.getMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setInlineMessageId("getGameHighScores");
      Integer integer0 = new Integer(1514);
      GetGameHighScores getGameHighScores2 = getGameHighScores1.setUserId(integer0);
      getGameHighScores2.validate();
      assertSame(getGameHighScores1, getGameHighScores2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      String string0 = getGameHighScores0.getMethod();
      assertEquals("getGameHighScores", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      Integer integer0 = getGameHighScores0.getUserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      getGameHighScores0.setChatId("getGameHighScores");
      Integer integer0 = new Integer((-4513));
      GetGameHighScores getGameHighScores1 = getGameHighScores0.setUserId(integer0);
      getGameHighScores0.setInlineMessageId("getGameHighScores");
      try { 
        getGameHighScores1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      String string0 = getGameHighScores0.toString();
      assertEquals("GetGameHighScores{chatId='null', messageId=null, inlineMessageId='null', userId=null}", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      String string0 = getGameHighScores0.getInlineMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      String string0 = getGameHighScores0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GetGameHighScores getGameHighScores0 = new GetGameHighScores();
      // Undeclared exception!
      try { 
        getGameHighScores0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.games.GetGameHighScores", e);
      }
  }
}
