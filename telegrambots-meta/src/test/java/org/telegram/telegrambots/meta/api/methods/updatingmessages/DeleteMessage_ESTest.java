/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:39:08 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.updatingmessages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeleteMessage_ESTest extends DeleteMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      Integer integer0 = deleteMessage0.getMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      Integer integer0 = new Integer(0);
      DeleteMessage deleteMessage1 = deleteMessage0.setMessageId(integer0);
      Integer integer1 = deleteMessage1.getMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(125);
      DeleteMessage deleteMessage0 = new DeleteMessage("", integer0);
      deleteMessage0.getMessageId();
      assertEquals("", deleteMessage0.getChatId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      Long long0 = new Long((-3711L));
      deleteMessage0.setChatId(long0);
      String string0 = deleteMessage0.getChatId();
      assertEquals("-3711", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(862L);
      Integer integer0 = new Integer(0);
      DeleteMessage deleteMessage0 = new DeleteMessage(long0, integer0);
      deleteMessage0.setChatId("");
      String string0 = deleteMessage0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(2490);
      DeleteMessage deleteMessage0 = new DeleteMessage("", integer0);
      // Undeclared exception!
      try { 
        deleteMessage0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      // Undeclared exception!
      try { 
        deleteMessage0.deserializeResponse("{}}*nE8*] m`S *QI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeleteMessage deleteMessage0 = null;
      try {
        deleteMessage0 = new DeleteMessage("A ;cN0'j", (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-2147483648L));
      DeleteMessage deleteMessage0 = null;
      try {
        deleteMessage0 = new DeleteMessage(long0, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      try { 
        deleteMessage0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-1658L));
      Integer integer0 = new Integer((-10));
      DeleteMessage deleteMessage0 = new DeleteMessage(long0, integer0);
      deleteMessage0.validate();
      assertEquals("deleteMessage", deleteMessage0.getMethod());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long((-1658L));
      Integer integer0 = new Integer((-10));
      DeleteMessage deleteMessage0 = new DeleteMessage(long0, integer0);
      try { 
        deleteMessage0.deserializeResponse("deleteMessage");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      deleteMessage0.setChatId("deleteMessage");
      try { 
        deleteMessage0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long((-1658L));
      Integer integer0 = new Integer((-10));
      DeleteMessage deleteMessage0 = new DeleteMessage(long0, integer0);
      String string0 = deleteMessage0.toString();
      assertEquals("DeleteMessage{chatId='-1658', messageId=-10}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long((-1658L));
      Integer integer0 = new Integer((-10));
      DeleteMessage deleteMessage0 = new DeleteMessage(long0, integer0);
      String string0 = deleteMessage0.getMethod();
      assertEquals("deleteMessage", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long((-1658L));
      Integer integer0 = new Integer((-10));
      DeleteMessage deleteMessage0 = new DeleteMessage(long0, integer0);
      Integer integer1 = deleteMessage0.getMessageId();
      assertEquals((-10), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeleteMessage deleteMessage0 = new DeleteMessage();
      String string0 = deleteMessage0.getChatId();
      assertNull(string0);
  }
}
