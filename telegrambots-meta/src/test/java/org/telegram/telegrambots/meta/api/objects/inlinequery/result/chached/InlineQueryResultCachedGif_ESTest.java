/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:10:32 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputTextMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedGif;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InlineQueryResultCachedGif_ESTest extends InlineQueryResultCachedGif_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setTitle("B8*e_pK1IL@32");
      String string0 = inlineQueryResultCachedGif0.getTitle();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineQueryResultCachedGif0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineQueryResultCachedGif0.getReplyMarkup();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setParseMode(".J_HDH}2</G[");
      String string0 = inlineQueryResultCachedGif0.getParseMode();
      assertEquals(".J_HDH}2</G[", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setId("N");
      String string0 = inlineQueryResultCachedGif0.getId();
      assertEquals("N", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineQueryResultCachedGif inlineQueryResultCachedGif1 = inlineQueryResultCachedGif0.setId("");
      String string0 = inlineQueryResultCachedGif1.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setGifFileId("[");
      String string0 = inlineQueryResultCachedGif0.getGifFileId();
      assertEquals("[", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setGifFileId("");
      String string0 = inlineQueryResultCachedGif0.getGifFileId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineQueryResultCachedGif inlineQueryResultCachedGif1 = inlineQueryResultCachedGif0.setCaption("QqS<J>O22-");
      String string0 = inlineQueryResultCachedGif1.getCaption();
      assertEquals("QqS<J>O22-", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setId("N");
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inlineQueryResultCachedGif0.setInputMessageContent(inputTextMessageContent0);
      inlineQueryResultCachedGif0.setGifFileId("N");
      try { 
        inlineQueryResultCachedGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageText parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputTextMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineQueryResultCachedGif inlineQueryResultCachedGif1 = inlineQueryResultCachedGif0.setGifFileId("");
      InlineQueryResultCachedGif inlineQueryResultCachedGif2 = inlineQueryResultCachedGif1.setId("<B>rMs!ED?>Bk#KIa");
      try { 
        inlineQueryResultCachedGif2.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GifFileId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setId("N");
      inlineQueryResultCachedGif0.setGifFileId("N");
      inlineQueryResultCachedGif0.validate();
      assertNull(inlineQueryResultCachedGif0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineQueryResultCachedGif inlineQueryResultCachedGif1 = inlineQueryResultCachedGif0.setId("");
      try { 
        inlineQueryResultCachedGif1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      try { 
        inlineQueryResultCachedGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      InlineQueryResultCachedGif inlineQueryResultCachedGif1 = inlineQueryResultCachedGif0.setReplyMarkup(inlineKeyboardMarkup0);
      inlineQueryResultCachedGif0.setId("N");
      inlineQueryResultCachedGif0.setGifFileId("N");
      inlineQueryResultCachedGif1.validate();
      assertEquals("N", inlineQueryResultCachedGif1.getId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setTitle("");
      String string0 = inlineQueryResultCachedGif0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.getGifFileId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setId("N");
      try { 
        inlineQueryResultCachedGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GifFileId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.chached.InlineQueryResultCachedGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      inlineQueryResultCachedGif0.setParseMode("");
      String string0 = inlineQueryResultCachedGif0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InputMessageContent inputMessageContent0 = inlineQueryResultCachedGif0.getInputMessageContent();
      assertNull(inputMessageContent0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineQueryResultCachedGif inlineQueryResultCachedGif1 = inlineQueryResultCachedGif0.setCaption("");
      String string0 = inlineQueryResultCachedGif1.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = inlineQueryResultCachedGif0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.getType();
      assertEquals("gif", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.toString();
      assertEquals("InlineQueryResultCachedGif{type='gif', id='null', gifFileId='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, parseMode='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inlineQueryResultCachedGif0.setInputMessageContent(inputTextMessageContent0);
      InputTextMessageContent inputTextMessageContent1 = (InputTextMessageContent)inlineQueryResultCachedGif0.getInputMessageContent();
      assertNull(inputTextMessageContent1.getMessageText());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InlineQueryResultCachedGif inlineQueryResultCachedGif0 = new InlineQueryResultCachedGif();
      String string0 = inlineQueryResultCachedGif0.getCaption();
      assertNull(string0);
  }
}
