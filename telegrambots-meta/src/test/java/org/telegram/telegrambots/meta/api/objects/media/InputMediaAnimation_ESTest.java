/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:48:42 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.media;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.media.InputMediaAnimation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InputMediaAnimation_ESTest extends InputMediaAnimation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("File_id can't be empty", "File_id can't be empty");
      inputMediaAnimation0.validate();
      assertNull(inputMediaAnimation0.getWidth());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setMedia((File) null, "BH");
      InputMediaAnimation inputMediaAnimation2 = inputMediaAnimation1.setWidth((Integer) null);
      assertNull(inputMediaAnimation2.getHeight());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setMedia((File) null, "BH");
      InputMediaAnimation inputMediaAnimation2 = inputMediaAnimation1.setThumb((InputFile) null);
      assertSame(inputMediaAnimation0, inputMediaAnimation2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      MockFile mockFile0 = new MockFile("type");
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setMedia((File) mockFile0, "$9e,");
      Integer integer0 = new Integer(1);
      InputMediaAnimation inputMediaAnimation2 = inputMediaAnimation0.setHeight(integer0);
      assertSame(inputMediaAnimation2, inputMediaAnimation1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("kn", "Ne\"4_'aD68=ur&");
      inputMediaAnimation0.setMedia((File) null, "JD");
      Integer integer0 = new Integer(622);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setDuration(integer0);
      assertEquals("Ne\"4_'aD68=ur&", inputMediaAnimation1.getCaption());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("VUQCmWt", "AUTO");
      Integer integer0 = new Integer(0);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setWidth(integer0);
      Integer integer1 = inputMediaAnimation1.getWidth();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("kn", "Ne\"4_'aD68=ur&");
      Integer integer0 = new Integer(622);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setWidth(integer0);
      Integer integer1 = inputMediaAnimation1.getWidth();
      assertEquals(622, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      Integer integer0 = new Integer((-632));
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setWidth(integer0);
      Integer integer1 = inputMediaAnimation1.getWidth();
      assertEquals((-632), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      InputFile inputFile0 = new InputFile("media");
      inputMediaAnimation0.setThumb(inputFile0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      InputFile inputFile1 = inputFile0.setMedia((InputStream) dataInputStream0, "width");
      InputFile inputFile2 = inputMediaAnimation0.getThumb();
      assertSame(inputFile2, inputFile1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("", "");
      Integer integer0 = new Integer(0);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setHeight(integer0);
      Integer integer1 = inputMediaAnimation1.getHeight();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      Integer integer0 = new Integer(4);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setHeight(integer0);
      Integer integer1 = inputMediaAnimation1.getHeight();
      assertEquals(4, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      Integer integer0 = new Integer(0);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setDuration(integer0);
      Integer integer1 = inputMediaAnimation1.getDuration();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      Integer integer0 = new Integer(3);
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setDuration(integer0);
      Integer integer1 = inputMediaAnimation1.getDuration();
      assertEquals(3, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      Integer integer0 = new Integer((-1));
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setDuration(integer0);
      Integer integer1 = inputMediaAnimation1.getDuration();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      Integer integer0 = new Integer((-3627));
      inputMediaAnimation0.setHeight(integer0);
      Integer integer1 = inputMediaAnimation0.getHeight();
      assertEquals((-3627), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      String string0 = inputMediaAnimation0.toString();
      assertEquals("InputMediaAnimation{width=null, height=null, duration=null, thumb=null} InputMedia{media='Adj0F]:', caption='Adj0F]:', parseMode='null', isNewMedia=false, mediaName='null', newMediaFile=null, newMediaStream=null}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      Integer integer0 = inputMediaAnimation0.getDuration();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      InputFile inputFile0 = new InputFile("oRo;U?&h");
      InputMediaAnimation inputMediaAnimation1 = inputMediaAnimation0.setThumb(inputFile0);
      InputFile inputFile1 = inputMediaAnimation1.getThumb();
      assertNull(inputFile1.getMediaName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      String string0 = inputMediaAnimation0.getType();
      assertEquals("animation", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      Integer integer0 = inputMediaAnimation0.getHeight();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      try { 
        inputMediaAnimation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Media can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.media.InputMedia", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation("Adj0F]:", "Adj0F]:");
      InputFile inputFile0 = inputMediaAnimation0.getThumb();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InputMediaAnimation inputMediaAnimation0 = new InputMediaAnimation();
      Integer integer0 = inputMediaAnimation0.getWidth();
      assertNull(integer0);
  }
}
