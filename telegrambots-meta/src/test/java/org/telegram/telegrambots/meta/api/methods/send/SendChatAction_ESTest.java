/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:38:25 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.send;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.ActionType;
import org.telegram.telegrambots.meta.api.methods.send.SendChatAction;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SendChatAction_ESTest extends SendChatAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction();
      Long long0 = Long.getLong("sendChatAction", 3118L);
      SendChatAction sendChatAction1 = sendChatAction0.setChatId(long0);
      assertNull(sendChatAction1.getAction());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction();
      String string0 = sendChatAction0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("", "chat_id");
      String string0 = sendChatAction0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("", "");
      ActionType actionType0 = ActionType.TYPING;
      SendChatAction sendChatAction1 = sendChatAction0.setAction(actionType0);
      sendChatAction1.getAction();
      assertEquals("", sendChatAction1.getChatId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction();
      // Undeclared exception!
      try { 
        sendChatAction0.setAction((ActionType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendChatAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SendChatAction sendChatAction0 = null;
      try {
        sendChatAction0 = new SendChatAction((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SendChatAction sendChatAction0 = null;
      try {
        sendChatAction0 = new SendChatAction((Long) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction();
      sendChatAction0.setChatId("chat_id");
      try { 
        sendChatAction0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Action parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendChatAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("Y=^1:", "Y=^1:");
      sendChatAction0.validate();
      assertEquals("Y=^1:", sendChatAction0.getChatId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("Y=^1:", "Y=^1:");
      // Undeclared exception!
      try { 
        sendChatAction0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", "No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)");
      // Undeclared exception!
      try { 
        sendChatAction0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("Y=^1:", "Y=^1:");
      String string0 = sendChatAction0.toString();
      assertEquals("SendChatAction{chatId='Y=^1:', action='Y=^1:'}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long((-1L));
      SendChatAction sendChatAction0 = new SendChatAction(long0, "");
      try { 
        sendChatAction0.deserializeResponse("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendChatAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction();
      try { 
        sendChatAction0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendChatAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("Y=^1:", "Y=^1:");
      String string0 = sendChatAction0.getChatId();
      assertEquals("Y=^1:", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", "No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)");
      sendChatAction0.getAction();
      assertEquals("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", sendChatAction0.getChatId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SendChatAction sendChatAction0 = new SendChatAction("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", "No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)");
      String string0 = sendChatAction0.getMethod();
      assertEquals("No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", sendChatAction0.getChatId());
      assertEquals("sendChatAction", string0);
  }
}
