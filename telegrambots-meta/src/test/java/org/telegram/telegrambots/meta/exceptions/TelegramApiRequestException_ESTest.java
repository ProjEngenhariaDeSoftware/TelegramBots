/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:38:55 GMT 2018
 */

package org.telegram.telegrambots.meta.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.json.JSONObject;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.ResponseParameters;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ApiResponse;
import org.telegram.telegrambots.meta.exceptions.TelegramApiRequestException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TelegramApiRequestException_ESTest extends TelegramApiRequestException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = mock(JSONObject.class, new ViolatedAssumptionAnswer());
      doReturn(836).when(jSONObject1).getInt(anyString());
      doReturn(jSONObject0).when(jSONObject1).getJSONObject(anyString());
      doReturn("").when(jSONObject1).getString(anyString());
      doReturn(true).when(jSONObject1).has(anyString());
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("4[.00u", jSONObject1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResponseParameters responseParameters0 = new ResponseParameters();
      ApiResponse<String> apiResponse0 = (ApiResponse<String>) mock(ApiResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(apiResponse0).getErrorCode();
      doReturn(" in a Number value").when(apiResponse0).getErrorDescription();
      doReturn(responseParameters0).when(apiResponse0).getParameters();
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("8p\"*9(i01!:n{[B`>", apiResponse0);
      ResponseParameters responseParameters1 = telegramApiRequestException0.getParameters();
      assertNull(responseParameters1.getMigrateToChatId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResponseParameters responseParameters0 = new ResponseParameters();
      ApiResponse<String> apiResponse0 = (ApiResponse<String>) mock(ApiResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(apiResponse0).getErrorCode();
      doReturn(" in a Number value").when(apiResponse0).getErrorDescription();
      doReturn(responseParameters0).when(apiResponse0).getParameters();
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("8p\"*9(i01!:n{[B`>", apiResponse0);
      Integer integer0 = telegramApiRequestException0.getErrorCode();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("%v?ES0#_D5y7");
      Integer integer0 = telegramApiRequestException0.getErrorCode();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ApiResponse<String> apiResponse0 = (ApiResponse<String>) mock(ApiResponse.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(apiResponse0).getErrorCode();
      doReturn("Y(").when(apiResponse0).getErrorDescription();
      doReturn((ResponseParameters) null).when(apiResponse0).getParameters();
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("8p\"*9(i01!:n{[B`>", apiResponse0);
      Integer integer1 = telegramApiRequestException0.getErrorCode();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("z]|");
      telegramApiRequestException0.getApiResponse();
      assertEquals(0, (int)telegramApiRequestException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResponseParameters responseParameters0 = new ResponseParameters();
      ApiResponse<Object> apiResponse0 = (ApiResponse<Object>) mock(ApiResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(apiResponse0).getErrorCode();
      doReturn("").when(apiResponse0).getErrorDescription();
      doReturn(responseParameters0).when(apiResponse0).getParameters();
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("error_code", apiResponse0);
      String string0 = telegramApiRequestException0.getApiResponse();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TelegramApiRequestException telegramApiRequestException0 = null;
      try {
        telegramApiRequestException0 = new TelegramApiRequestException((String) null, (ApiResponse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.exceptions.TelegramApiRequestException", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      TelegramApiRequestException telegramApiRequestException0 = null;
      try {
        telegramApiRequestException0 = new TelegramApiRequestException("P\"t`=yO.K^JBrz%}", jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[java.io.StringWriter@0000000003] not found.
         //
         verifyException("org.json.JSONObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResponseParameters responseParameters0 = new ResponseParameters();
      ApiResponse<Object> apiResponse0 = (ApiResponse<Object>) mock(ApiResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(apiResponse0).getErrorCode();
      doReturn("WB}@48").when(apiResponse0).getErrorDescription();
      doReturn(responseParameters0).when(apiResponse0).getParameters();
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("WB}@48", apiResponse0);
      String string0 = telegramApiRequestException0.toString();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: WB}@48: WB}@48", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = mock(JSONObject.class, new ViolatedAssumptionAnswer());
      doReturn((-2383)).when(jSONObject0).getInt(anyString());
      doReturn("z]|").when(jSONObject0).getString(anyString());
      doReturn(false).when(jSONObject0).has(anyString());
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("z]|", jSONObject0);
      String string0 = telegramApiRequestException0.toString();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: z]|: [-2383] z]|", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = mock(JSONObject.class, new ViolatedAssumptionAnswer());
      doReturn((-684)).when(jSONObject0).getInt(anyString());
      doReturn((JSONObject) null).when(jSONObject0).getJSONObject(anyString());
      doReturn("M/PL").when(jSONObject0).getString(anyString());
      doReturn(true).when(jSONObject0).has(anyString());
      TelegramApiRequestException telegramApiRequestException0 = null;
      try {
        telegramApiRequestException0 = new TelegramApiRequestException("M/PL", jSONObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.exceptions.TelegramApiRequestException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = mock(JSONObject.class, new ViolatedAssumptionAnswer());
      doReturn((-2383)).when(jSONObject0).getInt(anyString());
      doReturn("z]|").when(jSONObject0).getString(anyString());
      doReturn(false).when(jSONObject0).has(anyString());
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("z]|", jSONObject0);
      ResponseParameters responseParameters0 = telegramApiRequestException0.getParameters();
      assertNull(responseParameters0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("z]|");
      String string0 = telegramApiRequestException0.toString();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: z]|", string0);
      assertEquals(0, (int)telegramApiRequestException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = mock(JSONObject.class, new ViolatedAssumptionAnswer());
      doReturn((-2383)).when(jSONObject0).getInt(anyString());
      doReturn("z]|").when(jSONObject0).getString(anyString());
      doReturn(false).when(jSONObject0).has(anyString());
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("z]|", jSONObject0);
      String string0 = telegramApiRequestException0.getApiResponse();
      assertEquals("z]|", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = mock(JSONObject.class, new ViolatedAssumptionAnswer());
      doReturn((-2383)).when(jSONObject0).getInt(anyString());
      doReturn("z]|").when(jSONObject0).getString(anyString());
      doReturn(false).when(jSONObject0).has(anyString());
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("z]|", jSONObject0);
      Integer integer0 = telegramApiRequestException0.getErrorCode();
      assertEquals((-2383), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResponseParameters responseParameters0 = new ResponseParameters();
      ApiResponse<Object> apiResponse0 = (ApiResponse<Object>) mock(ApiResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(apiResponse0).getErrorCode();
      doReturn("WB}@48").when(apiResponse0).getErrorDescription();
      doReturn(responseParameters0).when(apiResponse0).getParameters();
      TelegramApiRequestException telegramApiRequestException0 = new TelegramApiRequestException("WB}@48", apiResponse0);
      TelegramApiRequestException telegramApiRequestException1 = new TelegramApiRequestException("WB}@48", telegramApiRequestException0);
      assertFalse(telegramApiRequestException1.equals((Object)telegramApiRequestException0));
  }
}
