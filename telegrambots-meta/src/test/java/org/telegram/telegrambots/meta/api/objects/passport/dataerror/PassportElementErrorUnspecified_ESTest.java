/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:16:46 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.passport.dataerror;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PassportElementErrorUnspecified_ESTest extends PassportElementErrorUnspecified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      PassportElementErrorUnspecified passportElementErrorUnspecified1 = passportElementErrorUnspecified0.setType("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified");
      String string0 = passportElementErrorUnspecified1.getType();
      assertEquals("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified("", "READ_ONLY", "");
      String string0 = passportElementErrorUnspecified0.getType();
      assertEquals("", string0);
      assertEquals("READ_ONLY", passportElementErrorUnspecified0.getElementHash());
      assertEquals("", passportElementErrorUnspecified0.getMessage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      PassportElementErrorUnspecified passportElementErrorUnspecified1 = passportElementErrorUnspecified0.setMessage("");
      String string0 = passportElementErrorUnspecified1.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified(" in method: ", " in method: ", "");
      String string0 = passportElementErrorUnspecified0.getElementHash();
      assertEquals("", passportElementErrorUnspecified0.getMessage());
      assertEquals(" in method: ", string0);
      assertEquals(" in method: ", passportElementErrorUnspecified0.getType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      passportElementErrorUnspecified0.setElementHash("");
      String string0 = passportElementErrorUnspecified0.getElementHash();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      // Undeclared exception!
      try { 
        passportElementErrorUnspecified0.setType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      // Undeclared exception!
      try { 
        passportElementErrorUnspecified0.setMessage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = null;
      try {
        passportElementErrorUnspecified0 = new PassportElementErrorUnspecified("", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      PassportElementErrorUnspecified passportElementErrorUnspecified1 = passportElementErrorUnspecified0.setElementHash("}");
      passportElementErrorUnspecified1.setMessage("}");
      PassportElementErrorUnspecified passportElementErrorUnspecified2 = passportElementErrorUnspecified0.setType("");
      try { 
        passportElementErrorUnspecified2.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Type parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      PassportElementErrorUnspecified passportElementErrorUnspecified1 = passportElementErrorUnspecified0.setElementHash("}");
      passportElementErrorUnspecified1.setMessage("}");
      try { 
        passportElementErrorUnspecified0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Type parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      passportElementErrorUnspecified0.setElementHash("}");
      try { 
        passportElementErrorUnspecified0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Message parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      try { 
        passportElementErrorUnspecified0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Element hash parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      String string0 = passportElementErrorUnspecified0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      passportElementErrorUnspecified0.setMessage("}");
      String string0 = passportElementErrorUnspecified0.getMessage();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      String string0 = passportElementErrorUnspecified0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      String string0 = passportElementErrorUnspecified0.getSource();
      assertEquals("unspecified", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      String string0 = passportElementErrorUnspecified0.getElementHash();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      String string0 = passportElementErrorUnspecified0.toString();
      assertEquals("PassportElementErrorFile{source='unspecified', type='null', elementHash='null', message='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified("jMtX#6=Da}p", "", "");
      passportElementErrorUnspecified0.setElementHash("jMtX#6=Da}p");
      try { 
        passportElementErrorUnspecified0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Message parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified();
      passportElementErrorUnspecified0.setType("}");
      PassportElementErrorUnspecified passportElementErrorUnspecified1 = passportElementErrorUnspecified0.setElementHash("}");
      passportElementErrorUnspecified1.setMessage("}");
      passportElementErrorUnspecified0.validate();
      assertEquals("}", passportElementErrorUnspecified0.getMessage());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PassportElementErrorUnspecified passportElementErrorUnspecified0 = new PassportElementErrorUnspecified("", "", "");
      try { 
        passportElementErrorUnspecified0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Element hash parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorUnspecified", e);
      }
  }
}
