/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:44:50 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CallbackQuery_ESTest extends CallbackQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      User user0 = callbackQuery0.getFrom();
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      String string0 = callbackQuery0.toString();
      assertEquals("CallbackQuery{id='null', from=null, message=null, inlineMessageId='null', data='null', gameShortName='null', chatInstance='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      String string0 = callbackQuery0.getData();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      String string0 = callbackQuery0.getGameShortName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      String string0 = callbackQuery0.getChatInstance();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      Message message0 = callbackQuery0.getMessage();
      assertNull(message0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      String string0 = callbackQuery0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CallbackQuery callbackQuery0 = new CallbackQuery();
      String string0 = callbackQuery0.getInlineMessageId();
      assertNull(string0);
  }
}
