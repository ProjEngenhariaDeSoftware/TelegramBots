/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:48:23 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.passport;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.passport.EncryptedCredentials;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EncryptedCredentials_ESTest extends EncryptedCredentials_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials();
      String string0 = encryptedCredentials0.getSecret();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("hash", "hash", "");
      String string0 = encryptedCredentials0.getSecret();
      assertEquals("hash", encryptedCredentials0.getData());
      assertEquals("hash", encryptedCredentials0.getHash());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials();
      String string0 = encryptedCredentials0.getHash();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("", "", "");
      String string0 = encryptedCredentials0.getHash();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("", "", "}ei8q_QiBuZt)");
      String string0 = encryptedCredentials0.getData();
      assertEquals("}ei8q_QiBuZt)", encryptedCredentials0.getSecret());
      assertEquals("", encryptedCredentials0.getHash());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials();
      String string0 = encryptedCredentials0.getData();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("7ata", "7ata", "7ata");
      String string0 = encryptedCredentials0.getData();
      assertEquals("7ata", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("7ata", "7ata", "7ata");
      String string0 = encryptedCredentials0.getSecret();
      assertEquals("7ata", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("7ata", "7ata", "7ata");
      String string0 = encryptedCredentials0.getHash();
      assertEquals("7ata", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = new EncryptedCredentials("7ata", "7ata", "7ata");
      String string0 = encryptedCredentials0.toString();
      assertEquals("EncryptedCredentials{data='7ata', hash='7ata', secret='7ata'}", string0);
  }
}
