/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 12:41:43 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.send;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ForceReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SendMessage_ESTest extends SendMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long(3043L);
      SendMessage sendMessage0 = new SendMessage(long0, "");
      SendMessage sendMessage1 = sendMessage0.setText("sendmessage");
      String string0 = sendMessage1.getText();
      assertEquals("sendmessage", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(", text='", ", text='");
      sendMessage0.setText("");
      sendMessage0.getText();
      assertEquals("", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      Integer integer0 = new Integer((-1441));
      sendMessage0.setReplyToMessageId(integer0);
      Integer integer1 = sendMessage0.getReplyToMessageId();
      assertEquals((-1441), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      Integer integer0 = new Integer(909);
      sendMessage0.setReplyToMessageId(integer0);
      Integer integer1 = sendMessage0.getReplyToMessageId();
      assertEquals(909, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("[collection-like type; class ", "[collection-like type; class ");
      ReplyKeyboardMarkup replyKeyboardMarkup0 = new ReplyKeyboardMarkup();
      SendMessage sendMessage1 = sendMessage0.setReplyMarkup(replyKeyboardMarkup0);
      sendMessage1.getReplyMarkup();
      assertEquals("[collection-like type; class ", sendMessage1.getText());
      assertEquals("[collection-like type; class ", sendMessage1.getChatId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-849L));
      SendMessage sendMessage0 = new SendMessage(long0, ", game=");
      sendMessage0.disableWebPagePreview();
      Boolean boolean0 = sendMessage0.getDisableWebPagePreview();
      assertEquals(", game=", sendMessage0.getText());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("", "");
      SendMessage sendMessage1 = sendMessage0.disableNotification();
      Boolean boolean0 = sendMessage1.getDisableNotification();
      assertTrue(boolean0);
      assertEquals("", sendMessage1.getChatId());
      assertEquals("", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("Venue{location=", "(");
      String string0 = sendMessage0.getChatId();
      assertEquals("Venue{location=", string0);
      assertEquals("(", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      sendMessage0.setChatId("");
      String string0 = sendMessage0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("z5:]T5vD&-$", " xfDmCF(");
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      linkedList0.offerFirst((List<InlineKeyboardButton>) null);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard(linkedList0);
      sendMessage0.setReplyMarkup(inlineKeyboardMarkup1);
      // Undeclared exception!
      try { 
        sendMessage0.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      // Undeclared exception!
      try { 
        sendMessage0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("Venue{location=", "(");
      // Undeclared exception!
      try { 
        sendMessage0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SendMessage sendMessage0 = null;
      try {
        sendMessage0 = new SendMessage((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = Long.valueOf(1L);
      SendMessage sendMessage0 = null;
      try {
        sendMessage0 = new SendMessage(long0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      SendMessage sendMessage1 = new SendMessage();
      assertTrue(sendMessage1.equals((Object)sendMessage0));
      
      sendMessage1.setText("sendmessage");
      boolean boolean0 = sendMessage0.equals(sendMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      SendMessage sendMessage1 = new SendMessage();
      assertTrue(sendMessage1.equals((Object)sendMessage0));
      
      Integer integer0 = new Integer(262144);
      sendMessage1.setReplyToMessageId(integer0);
      boolean boolean0 = sendMessage0.equals(sendMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      ForceReplyKeyboard forceReplyKeyboard0 = new ForceReplyKeyboard();
      sendMessage0.setReplyMarkup(forceReplyKeyboard0);
      SendMessage sendMessage1 = new SendMessage();
      boolean boolean0 = sendMessage0.equals(sendMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      SendMessage sendMessage1 = new SendMessage();
      assertTrue(sendMessage1.equals((Object)sendMessage0));
      
      SendMessage sendMessage2 = sendMessage1.setParseMode("sendmessage");
      boolean boolean0 = sendMessage2.equals(sendMessage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      SendMessage sendMessage1 = new SendMessage();
      assertTrue(sendMessage1.equals((Object)sendMessage0));
      
      sendMessage1.disableWebPagePreview();
      boolean boolean0 = sendMessage1.equals(sendMessage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      SendMessage sendMessage1 = new SendMessage();
      boolean boolean0 = sendMessage0.equals(sendMessage1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long((-633L));
      SendMessage sendMessage0 = new SendMessage(long0, "QZB;=U~+j`ZcRp ");
      boolean boolean0 = sendMessage0.equals("z");
      assertFalse(boolean0);
      assertEquals("QZB;=U~+j`ZcRp ", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      boolean boolean0 = sendMessage0.equals(sendMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Long long0 = new Long((-633L));
      SendMessage sendMessage0 = new SendMessage(long0, "QZB;=U~+j`ZcRp ");
      SendMessage sendMessage1 = new SendMessage("+?U+t$X`]>^!,P/0", "");
      boolean boolean0 = sendMessage0.equals(sendMessage1);
      assertFalse(boolean0);
      assertEquals("+?U+t$X`]>^!,P/0", sendMessage1.getChatId());
      assertEquals("QZB;=U~+j`ZcRp ", sendMessage0.getText());
      assertEquals("", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("", "");
      try { 
        sendMessage0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      sendMessage0.setChatId("1[)V[<%r");
      try { 
        sendMessage0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      try { 
        sendMessage0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long((-633L));
      SendMessage sendMessage0 = new SendMessage(long0, "QZB;=U~+j`ZcRp ");
      sendMessage0.validate();
      assertEquals("QZB;=U~+j`ZcRp ", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(".f$7V#es>i3REh", ".f$7V#es>i3REh");
      SendMessage sendMessage1 = sendMessage0.enableHtml(true);
      assertEquals(".f$7V#es>i3REh", sendMessage1.getChatId());
      assertEquals(".f$7V#es>i3REh", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(":c", ":c");
      SendMessage sendMessage1 = sendMessage0.enableHtml(false);
      assertEquals(":c", sendMessage1.getChatId());
      assertEquals(":c", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(".f$7V#es>i3REh", ".f$7V#es>i3REh");
      SendMessage sendMessage1 = sendMessage0.enableMarkdown(true);
      assertEquals(".f$7V#es>i3REh", sendMessage1.getChatId());
      assertEquals(".f$7V#es>i3REh", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage("null array", "null array");
      SendMessage sendMessage1 = sendMessage0.enableMarkdown(false);
      assertEquals("null array", sendMessage1.getChatId());
      assertEquals("null array", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Long long0 = new Long((-633L));
      SendMessage sendMessage0 = new SendMessage(long0, "QZB;=U~+j`ZcRp ");
      try { 
        sendMessage0.deserializeResponse("sendmessage");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      Integer integer0 = new Integer(0);
      sendMessage0.setReplyToMessageId(integer0);
      Integer integer1 = sendMessage0.getReplyToMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Long long0 = new Long((-3267L));
      SendMessage sendMessage0 = new SendMessage(long0, "`");
      sendMessage0.hashCode();
      assertEquals("`", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(":c", ":c");
      sendMessage0.getDisableWebPagePreview();
      assertEquals(":c", sendMessage0.getChatId());
      assertEquals(":c", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(":c", ":c");
      sendMessage0.getDisableNotification();
      assertEquals(":c", sendMessage0.getChatId());
      assertEquals(":c", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      String string0 = sendMessage0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(".f$7V#es>i3REh", ".f$7V#es>i3REh");
      assertEquals(".f$7V#es>i3REh", sendMessage0.getChatId());
      
      Long long0 = new Long(0L);
      sendMessage0.setChatId(long0);
      assertEquals(".f$7V#es>i3REh", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      Integer integer0 = sendMessage0.getReplyToMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Long long0 = new Long((-633L));
      SendMessage sendMessage0 = new SendMessage(long0, "QZB;=U~+j`ZcRp ");
      sendMessage0.getReplyMarkup();
      assertEquals("QZB;=U~+j`ZcRp ", sendMessage0.getText());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(".f$7V#es>i3REh", ".f$7V#es>i3REh");
      SendMessage sendMessage1 = sendMessage0.enableWebPagePreview();
      assertEquals(".f$7V#es>i3REh", sendMessage1.getChatId());
      assertEquals(".f$7V#es>i3REh", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(".f$7V#es>i3REh", ".f$7V#es>i3REh");
      SendMessage sendMessage1 = sendMessage0.disableNotification();
      assertEquals(".f$7V#es>i3REh", sendMessage1.getChatId());
      
      Long long0 = new Long(0L);
      sendMessage1.setChatId(long0);
      SendMessage sendMessage2 = new SendMessage(long0, "sendmessage");
      boolean boolean0 = sendMessage1.equals(sendMessage2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Long long0 = new Long((-3267L));
      SendMessage sendMessage0 = new SendMessage(long0, "`");
      String string0 = sendMessage0.toString();
      assertEquals("SendMessage{chatId='-3267', text='`', parseMode='null', disableWebPagePreview=null, replyToMessageId=null, replyMarkup=null}", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage(".f$7V#es>i3REh", ".f$7V#es>i3REh");
      String string0 = sendMessage0.getMethod();
      assertEquals(".f$7V#es>i3REh", sendMessage0.getText());
      assertEquals(".f$7V#es>i3REh", sendMessage0.getChatId());
      assertEquals("sendmessage", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Long long0 = new Long((-633L));
      SendMessage sendMessage0 = new SendMessage(long0, "QZB;=U~+j`ZcRp ");
      SendMessage sendMessage1 = sendMessage0.enableNotification();
      assertEquals("QZB;=U~+j`ZcRp ", sendMessage1.getText());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SendMessage sendMessage0 = new SendMessage();
      String string0 = sendMessage0.getChatId();
      assertNull(string0);
  }
}
