/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 12:53:43 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.updatingmessages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EditMessageLiveLocation_ESTest extends EditMessageLiveLocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      // Undeclared exception!
      try { 
        editMessageLiveLocation0.deserializeResponse("null");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = editMessageLiveLocation1.getReplyMarkup();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Integer integer0 = new Integer(0);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setMessageId(integer0);
      Integer integer1 = editMessageLiveLocation1.getMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Integer integer0 = new Integer((-2546));
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setMessageId(integer0);
      Integer integer1 = editMessageLiveLocation1.getMessageId();
      assertEquals((-2546), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Integer integer0 = new Integer(2485);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setMessageId(integer0);
      Integer integer1 = editMessageLiveLocation1.getMessageId();
      assertEquals(2485, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(Double.NaN);
      editMessageLiveLocation0.setLongitud(float0);
      Float float1 = editMessageLiveLocation0.getLongitud();
      assertEquals(Float.NaN, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(Float.NEGATIVE_INFINITY);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setLongitud(float0);
      Float float1 = editMessageLiveLocation1.getLongitud();
      assertEquals(Float.NEGATIVE_INFINITY, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(0.0);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setLongitud(float0);
      Float float1 = editMessageLiveLocation1.getLongitud();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(1.0F);
      editMessageLiveLocation0.setLongitud(float0);
      Float float1 = editMessageLiveLocation0.getLongitud();
      assertEquals(1.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float((-2373.7));
      editMessageLiveLocation0.setLongitud(float0);
      Float float1 = editMessageLiveLocation0.getLongitud();
      assertEquals((-2373.7F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(Float.NaN);
      editMessageLiveLocation0.setLatitude(float0);
      Float float1 = editMessageLiveLocation0.getLatitude();
      assertEquals(Float.NaN, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(Double.POSITIVE_INFINITY);
      editMessageLiveLocation0.setLatitude(float0);
      Float float1 = editMessageLiveLocation0.getLatitude();
      assertEquals(Float.POSITIVE_INFINITY, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(0.0);
      editMessageLiveLocation0.setLatitude(float0);
      Float float1 = editMessageLiveLocation0.getLatitude();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(285.3F);
      editMessageLiveLocation0.setLatitude(float0);
      Float float1 = editMessageLiveLocation0.getLatitude();
      assertEquals(285.3F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float((-3592.0F));
      editMessageLiveLocation0.setLatitude(float0);
      Float float1 = editMessageLiveLocation0.getLatitude();
      assertEquals((-3592.0F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      editMessageLiveLocation0.setInlineMessageId("editMessageLiveLocation");
      String string0 = editMessageLiveLocation0.getInlineMessageId();
      assertEquals("editMessageLiveLocation", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setInlineMessageId("");
      String string0 = editMessageLiveLocation1.getInlineMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Long long0 = new Long(776L);
      editMessageLiveLocation0.setChatId(long0);
      String string0 = editMessageLiveLocation0.getChatId();
      assertEquals("776", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      editMessageLiveLocation0.setChatId("");
      String string0 = editMessageLiveLocation0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(0.0F);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setLongitud(float0);
      EditMessageLiveLocation editMessageLiveLocation2 = editMessageLiveLocation1.setLatitude(float0);
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard(linkedList0);
      editMessageLiveLocation2.setReplyMarkup(inlineKeyboardMarkup1);
      EditMessageLiveLocation editMessageLiveLocation3 = editMessageLiveLocation0.setInlineMessageId("editMessageLiveLocation");
      linkedList0.add((List<InlineKeyboardButton>) null);
      // Undeclared exception!
      try { 
        editMessageLiveLocation3.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      // Undeclared exception!
      try { 
        editMessageLiveLocation0.setLongitud((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      // Undeclared exception!
      try { 
        editMessageLiveLocation0.setLatitude((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      // Undeclared exception!
      try { 
        editMessageLiveLocation0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float(0.0F);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setLongitud(float0);
      EditMessageLiveLocation editMessageLiveLocation2 = editMessageLiveLocation1.setLatitude(float0);
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      EditMessageLiveLocation editMessageLiveLocation3 = editMessageLiveLocation2.setReplyMarkup(inlineKeyboardMarkup0);
      EditMessageLiveLocation editMessageLiveLocation4 = editMessageLiveLocation3.setInlineMessageId("editMessageLiveLocation");
      editMessageLiveLocation4.validate();
      assertSame(editMessageLiveLocation4, editMessageLiveLocation2);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float((-575.5821041059436));
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setLatitude(float0);
      EditMessageLiveLocation editMessageLiveLocation2 = editMessageLiveLocation1.setChatId("");
      EditMessageLiveLocation editMessageLiveLocation3 = editMessageLiveLocation2.setLongitud(float0);
      Integer integer0 = new Integer((-545));
      editMessageLiveLocation3.setMessageId(integer0);
      editMessageLiveLocation0.validate();
      assertEquals("", editMessageLiveLocation0.getChatId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = new Float((-575.5821041059436));
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setLatitude(float0);
      editMessageLiveLocation1.setChatId("");
      Integer integer0 = new Integer((-545));
      editMessageLiveLocation0.setMessageId(integer0);
      try { 
        editMessageLiveLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Longitud parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setInlineMessageId("editMessageLiveLocation");
      Integer integer0 = new Integer(759);
      editMessageLiveLocation0.setMessageId(integer0);
      try { 
        editMessageLiveLocation1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setChatId("");
      Integer integer0 = new Integer((-545));
      editMessageLiveLocation0.setMessageId(integer0);
      try { 
        editMessageLiveLocation1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Latitude parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      try { 
        editMessageLiveLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      String string0 = editMessageLiveLocation0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      String string0 = editMessageLiveLocation0.getMethod();
      assertEquals("editMessageLiveLocation", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = editMessageLiveLocation0.getLatitude();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Long long0 = new Long(776L);
      EditMessageLiveLocation editMessageLiveLocation1 = editMessageLiveLocation0.setChatId(long0);
      EditMessageLiveLocation editMessageLiveLocation2 = editMessageLiveLocation1.setInlineMessageId("editMessageLiveLocation");
      try { 
        editMessageLiveLocation2.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      String string0 = editMessageLiveLocation0.getInlineMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Float float0 = editMessageLiveLocation0.getLongitud();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      editMessageLiveLocation0.setChatId("");
      try { 
        editMessageLiveLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      String string0 = editMessageLiveLocation0.toString();
      assertEquals("EditMessageLiveLocation{chatId='null', messageId=null, inlineMessageId='null', latitude=null, longitud=null, replyMarkup=null}", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      Integer integer0 = editMessageLiveLocation0.getMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = editMessageLiveLocation0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EditMessageLiveLocation editMessageLiveLocation0 = new EditMessageLiveLocation();
      try { 
        editMessageLiveLocation0.deserializeResponse("editMessageLiveLocation");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageLiveLocation", e);
      }
  }
}
