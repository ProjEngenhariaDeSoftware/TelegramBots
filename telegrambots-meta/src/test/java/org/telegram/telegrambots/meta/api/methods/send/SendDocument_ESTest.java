/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:29:48 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.send;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.send.SendDocument;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ForceReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SendDocument_ESTest extends SendDocument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-87), (byte)56);
      InputFile inputFile0 = new InputFile(byteArrayInputStream0, "document");
      SendDocument sendDocument1 = sendDocument0.setThumb(inputFile0);
      InputFile inputFile1 = sendDocument1.getThumb();
      assertTrue(inputFile1.isNew());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      InputFile inputFile0 = new InputFile("senddocument");
      SendDocument sendDocument1 = sendDocument0.setThumb(inputFile0);
      InputFile inputFile1 = sendDocument1.getThumb();
      assertSame(inputFile0, inputFile1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      Integer integer0 = new Integer(1346);
      sendDocument0.setReplyToMessageId(integer0);
      Integer integer1 = sendDocument0.getReplyToMessageId();
      assertEquals(1346, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      Integer integer0 = new Integer((-309));
      SendDocument sendDocument1 = sendDocument0.setReplyToMessageId(integer0);
      Integer integer1 = sendDocument1.getReplyToMessageId();
      assertEquals((-309), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.setParseMode("reply_to_message_id");
      String string0 = sendDocument1.getParseMode();
      assertEquals("reply_to_message_id", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      sendDocument0.setParseMode("");
      String string0 = sendDocument0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      MockFile mockFile0 = new MockFile("reply_to_message_id", "gu*\"G8qF=o");
      sendDocument0.setDocument((File) mockFile0);
      InputFile inputFile0 = sendDocument0.getDocument();
      assertTrue(inputFile0.isNew());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      InputFile inputFile0 = new InputFile();
      sendDocument0.setDocument(inputFile0);
      InputFile inputFile1 = sendDocument0.getDocument();
      assertSame(inputFile1, inputFile0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.setChatId("thumb");
      String string0 = sendDocument1.getChatId();
      assertEquals("thumb", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.setChatId("");
      String string0 = sendDocument1.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.setCaption("chat_id");
      String string0 = sendDocument1.getCaption();
      assertEquals("chat_id", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      sendDocument0.setCaption("");
      String string0 = sendDocument0.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      // Undeclared exception!
      try { 
        sendDocument0.setDocument("org.telegram.telegrambots.meta.api.methods.send.SendDocument", (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // inputStream cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      // Undeclared exception!
      try { 
        sendDocument0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      // Undeclared exception!
      try { 
        sendDocument0.deserializeResponse("null array");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.setChatId("thumb");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SendDocument sendDocument2 = sendDocument0.setDocument("chat_id", (InputStream) pipedInputStream0);
      ForceReplyKeyboard forceReplyKeyboard0 = new ForceReplyKeyboard();
      sendDocument2.setReplyMarkup(forceReplyKeyboard0);
      sendDocument1.validate();
      assertEquals("thumb", sendDocument1.getChatId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      File file0 = MockFile.createTempFile("caption", "!R:f<'", (File) null);
      SendDocument sendDocument1 = sendDocument0.setDocument(file0);
      InputFile inputFile0 = new InputFile();
      Long long0 = new Long(1810L);
      sendDocument1.setThumb(inputFile0);
      sendDocument1.setChatId(long0);
      try { 
        sendDocument1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // File_id can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.InputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      sendDocument0.setChatId("thumb");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sendDocument0.setDocument("sT*dCok>fVae", (InputStream) pipedInputStream0);
      sendDocument0.validate();
      assertEquals("thumb", sendDocument0.getChatId());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      try { 
        sendDocument0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      InputFile inputFile0 = sendDocument0.getThumb();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      String string0 = sendDocument0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      String string0 = sendDocument0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      InputFile inputFile0 = sendDocument0.getDocument();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.disableNotification();
      Boolean boolean0 = sendDocument1.getDisableNotification();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.enableNotification();
      Boolean boolean0 = sendDocument1.getDisableNotification();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      Integer integer0 = new Integer(0);
      sendDocument0.setReplyToMessageId(integer0);
      Integer integer1 = sendDocument0.getReplyToMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      String string0 = sendDocument0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      ReplyKeyboard replyKeyboard0 = sendDocument0.getReplyMarkup();
      assertNull(replyKeyboard0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      Boolean boolean0 = sendDocument0.getDisableNotification();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      // Undeclared exception!
      try { 
        sendDocument0.setDocument((InputFile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // document cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      SendDocument sendDocument1 = sendDocument0.setDocument("x_");
      assertNull(sendDocument1.getCaption());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      sendDocument0.setChatId("thumb");
      try { 
        sendDocument0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Document parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      ForceReplyKeyboard forceReplyKeyboard0 = new ForceReplyKeyboard();
      sendDocument0.setReplyMarkup(forceReplyKeyboard0);
      ForceReplyKeyboard forceReplyKeyboard1 = (ForceReplyKeyboard)sendDocument0.getReplyMarkup();
      assertNull(forceReplyKeyboard1.getSelective());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      Integer integer0 = sendDocument0.getReplyToMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      String string0 = sendDocument0.toString();
      assertEquals("SendDocument{chatId='null', document=null, caption='null', disableNotification=null, replyToMessageId=null, replyMarkup=null, parseMode='null', thumb=null}", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      // Undeclared exception!
      try { 
        sendDocument0.setDocument((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // documentName cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SendDocument sendDocument0 = new SendDocument();
      try { 
        sendDocument0.deserializeResponse("0wFBf");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendDocument", e);
      }
  }
}
