/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:33:48 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputTextMessageContent;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InputTextMessageContent_ESTest extends InputTextMessageContent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inputTextMessageContent0.setParseMode("uJ;Ra.s/7xN#=Gwj");
      String string0 = inputTextMessageContent0.getParseMode();
      assertEquals("uJ;Ra.s/7xN#=Gwj", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.setParseMode("");
      String string0 = inputTextMessageContent1.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inputTextMessageContent0.setMessageText("y");
      String string0 = inputTextMessageContent0.getMessageText();
      assertEquals("y", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inputTextMessageContent0.setMessageText("");
      String string0 = inputTextMessageContent0.getMessageText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inputTextMessageContent0.setMessageText("@");
      inputTextMessageContent0.validate();
      assertNull(inputTextMessageContent0.getDisableWebPagePreview());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      try { 
        inputTextMessageContent0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageText parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputTextMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.enableHtml(true);
      assertEquals("html", inputTextMessageContent1.getParseMode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.enableHtml(false);
      assertSame(inputTextMessageContent1, inputTextMessageContent0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.enableMarkdown(true);
      assertEquals("Markdown", inputTextMessageContent1.getParseMode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.enableMarkdown(false);
      assertSame(inputTextMessageContent0, inputTextMessageContent1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      String string0 = inputTextMessageContent0.getMessageText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      String string0 = inputTextMessageContent0.toString();
      assertEquals("InputTextMessageContent{, messageText='null', parseMode='null', disableWebPagePreview=null}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      Boolean boolean0 = new Boolean("=.D&c^,9:o<b!^");
      inputTextMessageContent0.setDisableWebPagePreview(boolean0);
      Boolean boolean1 = inputTextMessageContent0.getDisableWebPagePreview();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      String string0 = inputTextMessageContent0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.disableWebPagePreview();
      Boolean boolean0 = inputTextMessageContent1.getDisableWebPagePreview();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      InputTextMessageContent inputTextMessageContent1 = inputTextMessageContent0.enableWebPagePreview();
      assertNull(inputTextMessageContent1.getDisableWebPagePreview());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      inputTextMessageContent0.setMessageText("");
      try { 
        inputTextMessageContent0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageText parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputTextMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InputTextMessageContent inputTextMessageContent0 = new InputTextMessageContent();
      Boolean boolean0 = inputTextMessageContent0.getDisableWebPagePreview();
      assertNull(boolean0);
  }
}
