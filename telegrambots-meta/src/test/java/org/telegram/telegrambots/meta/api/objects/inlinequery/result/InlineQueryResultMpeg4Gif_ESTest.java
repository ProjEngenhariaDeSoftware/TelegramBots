/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:19:57 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.inlinequery.result;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputLocationMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputVenueMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultMpeg4Gif;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InlineQueryResultMpeg4Gif_ESTest extends InlineQueryResultMpeg4Gif_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setTitle("thumb_url");
      String string0 = inlineQueryResultMpeg4Gif1.getTitle();
      assertEquals("thumb_url", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setTitle("");
      String string0 = inlineQueryResultMpeg4Gif1.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setThumbUrl(", mpeg4Url='");
      String string0 = inlineQueryResultMpeg4Gif1.getThumbUrl();
      assertEquals(", mpeg4Url='", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setThumbUrl("");
      String string0 = inlineQueryResultMpeg4Gif0.getThumbUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setParseMode("`uM6&h");
      String string0 = inlineQueryResultMpeg4Gif1.getParseMode();
      assertEquals("`uM6&h", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setParseMode("");
      String string0 = inlineQueryResultMpeg4Gif0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer(2121);
      inlineQueryResultMpeg4Gif0.setMpeg4Width(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif0.getMpeg4Width();
      assertEquals(2121, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer((-1863));
      inlineQueryResultMpeg4Gif0.setMpeg4Width(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif0.getMpeg4Width();
      assertEquals((-1863), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setMpeg4Url("z'ACN'Z]\"");
      String string0 = inlineQueryResultMpeg4Gif0.getMpeg4Url();
      assertEquals("z'ACN'Z]\"", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setMpeg4Url("");
      String string0 = inlineQueryResultMpeg4Gif0.getMpeg4Url();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer(0);
      inlineQueryResultMpeg4Gif0.setMpeg4Height(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif0.getMpeg4Height();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer(39);
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setMpeg4Height(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif1.getMpeg4Height();
      assertEquals(39, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = Integer.getInteger("J@ uQpPIh&", (-2871));
      inlineQueryResultMpeg4Gif0.setMpeg4Height(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif0.getMpeg4Height();
      assertEquals((-2871), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer(63);
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setMpeg4Duration(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif1.getMpeg4Duration();
      assertEquals(63, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer((-603));
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setMpeg4Duration(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif1.getMpeg4Duration();
      assertEquals((-603), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setId("9}0");
      String string0 = inlineQueryResultMpeg4Gif0.getId();
      assertEquals("9}0", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setId("");
      String string0 = inlineQueryResultMpeg4Gif0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setCaption("");
      String string0 = inlineQueryResultMpeg4Gif1.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      inlineKeyboardMarkup0.setKeyboard(linkedList0);
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setReplyMarkup(inlineKeyboardMarkup0);
      linkedList0.add((List<InlineKeyboardButton>) null);
      inlineQueryResultMpeg4Gif0.setId(">e4<:&+'");
      inlineQueryResultMpeg4Gif1.setMpeg4Url("input_message_content");
      // Undeclared exception!
      try { 
        inlineQueryResultMpeg4Gif0.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setMpeg4Url("z'ACN'Z]\"");
      inlineQueryResultMpeg4Gif0.setId("InlineQueryResultMpeg4Gif{type='mpeg4_gif', id='null', mpeg4Url='z'ACN'Z]\"', mpeg4Width=null, mpeg4Height=null, thumbUrl='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, mpeg4Duration=null, parseMode='null'}");
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineQueryResultMpeg4Gif0.setReplyMarkup(inlineKeyboardMarkup0);
      inlineQueryResultMpeg4Gif0.validate();
      assertEquals("InlineQueryResultMpeg4Gif{type='mpeg4_gif', id='null', mpeg4Url='z'ACN'Z]\"', mpeg4Width=null, mpeg4Height=null, thumbUrl='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, mpeg4Duration=null, parseMode='null'}", inlineQueryResultMpeg4Gif0.getId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif1 = inlineQueryResultMpeg4Gif0.setId("e");
      inlineQueryResultMpeg4Gif1.setMpeg4Url("e");
      InputVenueMessageContent inputVenueMessageContent0 = new InputVenueMessageContent();
      inlineQueryResultMpeg4Gif1.setInputMessageContent(inputVenueMessageContent0);
      try { 
        inlineQueryResultMpeg4Gif1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Latitude parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputVenueMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setId("3L4aI");
      inlineQueryResultMpeg4Gif0.setMpeg4Url("");
      try { 
        inlineQueryResultMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Mpeg4Url parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setMpeg4Url("z'ACN'Z]\"");
      inlineQueryResultMpeg4Gif0.setId("InlineQueryResultMpeg4Gif{type='mpeg4_gif', id='null', mpeg4Url='z'ACN'Z]\"', mpeg4Width=null, mpeg4Height=null, thumbUrl='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, mpeg4Duration=null, parseMode='null'}");
      inlineQueryResultMpeg4Gif0.validate();
      assertNull(inlineQueryResultMpeg4Gif0.getMpeg4Height());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setId("");
      try { 
        inlineQueryResultMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      try { 
        inlineQueryResultMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setId("InlineQueryResultMpeg4Gif{type='mpeg4_gif', id='null', mpeg4Url='z'ACN'Z]\"', mpeg4Width=null, mpeg4Height=null, thumbUrl='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, mpeg4Duration=null, parseMode='null'}");
      try { 
        inlineQueryResultMpeg4Gif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Mpeg4Url parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultMpeg4Gif", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getType();
      assertEquals("mpeg4_gif", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.toString();
      assertEquals("InlineQueryResultMpeg4Gif{type='mpeg4_gif', id='null', mpeg4Url='null', mpeg4Width=null, mpeg4Height=null, thumbUrl='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, mpeg4Duration=null, parseMode='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = inlineQueryResultMpeg4Gif0.getMpeg4Height();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getMpeg4Url();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      inlineQueryResultMpeg4Gif0.setCaption("Title parameter can't be empty");
      String string0 = inlineQueryResultMpeg4Gif0.getCaption();
      assertEquals("Title parameter can't be empty", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = inlineQueryResultMpeg4Gif0.getMpeg4Duration();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InputMessageContent inputMessageContent0 = inlineQueryResultMpeg4Gif0.getInputMessageContent();
      assertNull(inputMessageContent0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = inlineQueryResultMpeg4Gif0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = inlineQueryResultMpeg4Gif0.getMpeg4Width();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      String string0 = inlineQueryResultMpeg4Gif0.getThumbUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer(0);
      inlineQueryResultMpeg4Gif0.setMpeg4Duration(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif0.getMpeg4Duration();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Float float0 = new Float(1.0F);
      InputLocationMessageContent inputLocationMessageContent0 = new InputLocationMessageContent(float0, float0);
      inlineQueryResultMpeg4Gif0.setInputMessageContent(inputLocationMessageContent0);
      InputMessageContent inputMessageContent0 = inlineQueryResultMpeg4Gif0.getInputMessageContent();
      assertSame(inputMessageContent0, inputLocationMessageContent0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      Integer integer0 = new Integer(0);
      inlineQueryResultMpeg4Gif0.setMpeg4Width(integer0);
      Integer integer1 = inlineQueryResultMpeg4Gif0.getMpeg4Width();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InlineQueryResultMpeg4Gif inlineQueryResultMpeg4Gif0 = new InlineQueryResultMpeg4Gif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineQueryResultMpeg4Gif0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineQueryResultMpeg4Gif0.getReplyMarkup();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }
}
