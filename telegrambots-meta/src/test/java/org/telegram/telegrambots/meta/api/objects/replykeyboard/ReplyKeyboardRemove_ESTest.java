/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:28:14 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.replykeyboard;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardRemove;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReplyKeyboardRemove_ESTest extends ReplyKeyboardRemove_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      Boolean boolean0 = new Boolean(":X1");
      ReplyKeyboardRemove replyKeyboardRemove1 = replyKeyboardRemove0.setSelective(boolean0);
      replyKeyboardRemove1.getSelective();
      assertTrue(replyKeyboardRemove1.getRemoveKeyboard());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      ReplyKeyboardRemove replyKeyboardRemove1 = new ReplyKeyboardRemove();
      boolean boolean0 = replyKeyboardRemove1.equals(replyKeyboardRemove0);
      assertTrue(replyKeyboardRemove1.getRemoveKeyboard());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      boolean boolean0 = replyKeyboardRemove0.equals((Object) null);
      assertFalse(boolean0);
      assertTrue(replyKeyboardRemove0.getRemoveKeyboard());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      boolean boolean0 = replyKeyboardRemove0.equals(replyKeyboardRemove0);
      assertTrue(boolean0);
      assertTrue(replyKeyboardRemove0.getRemoveKeyboard());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      ReplyKeyboardRemove replyKeyboardRemove1 = new ReplyKeyboardRemove();
      assertTrue(replyKeyboardRemove1.equals((Object)replyKeyboardRemove0));
      
      Boolean boolean0 = Boolean.FALSE;
      replyKeyboardRemove0.setSelective(boolean0);
      boolean boolean1 = replyKeyboardRemove0.equals(replyKeyboardRemove1);
      assertFalse(replyKeyboardRemove1.equals((Object)replyKeyboardRemove0));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      replyKeyboardRemove0.validate();
      assertTrue(replyKeyboardRemove0.getRemoveKeyboard());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      replyKeyboardRemove0.getSelective();
      assertTrue(replyKeyboardRemove0.getRemoveKeyboard());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      String string0 = replyKeyboardRemove0.toString();
      assertEquals("ReplyKeyboardRemove{removeKeyboard=true, selective=null}", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      replyKeyboardRemove0.hashCode();
      assertTrue(replyKeyboardRemove0.getRemoveKeyboard());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ReplyKeyboardRemove replyKeyboardRemove0 = new ReplyKeyboardRemove();
      Boolean boolean0 = replyKeyboardRemove0.getRemoveKeyboard();
      replyKeyboardRemove0.setSelective(boolean0);
      Boolean boolean1 = replyKeyboardRemove0.getSelective();
      assertTrue(boolean1);
  }
}
