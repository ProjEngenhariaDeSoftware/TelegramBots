/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:21:05 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.inlinequery.result;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputLocationMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputMessageContent;
import org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultGif;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InlineQueryResultGif_ESTest extends InlineQueryResultGif_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setTitle("");
      String string0 = inlineQueryResultGif1.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setThumbUrl("*v\"\"");
      String string0 = inlineQueryResultGif0.getThumbUrl();
      assertEquals("*v\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setThumbUrl("");
      String string0 = inlineQueryResultGif0.getThumbUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineQueryResultGif1.getReplyMarkup();
      assertSame(inlineKeyboardMarkup0, inlineKeyboardMarkup1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setParseMode("B=p!cqTMu6H/B");
      String string0 = inlineQueryResultGif0.getParseMode();
      assertEquals("B=p!cqTMu6H/B", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Float float0 = new Float((-967.0));
      InputLocationMessageContent inputLocationMessageContent0 = new InputLocationMessageContent(float0, float0);
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setInputMessageContent(inputLocationMessageContent0);
      InputMessageContent inputMessageContent0 = inlineQueryResultGif1.getInputMessageContent();
      assertSame(inputLocationMessageContent0, inputMessageContent0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setId("ibcOo");
      String string0 = inlineQueryResultGif1.getId();
      assertEquals("ibcOo", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setId("");
      String string0 = inlineQueryResultGif1.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer(1);
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setGifWidth(integer0);
      Integer integer1 = inlineQueryResultGif1.getGifWidth();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer(0);
      inlineQueryResultGif0.setGifWidth(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifWidth();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer((-457));
      inlineQueryResultGif0.setGifWidth(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifWidth();
      assertEquals((-457), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer((-2378));
      inlineQueryResultGif0.setGifWidth(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifWidth();
      assertEquals((-2378), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setGifUrl("[<G4g'%St");
      String string0 = inlineQueryResultGif1.getGifUrl();
      assertEquals("[<G4g'%St", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setGifUrl("");
      String string0 = inlineQueryResultGif0.getGifUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer(0);
      inlineQueryResultGif0.setGifHeight(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifHeight();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer((-457));
      inlineQueryResultGif0.setGifHeight(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifHeight();
      assertEquals((-457), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer(2766);
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setGifHeight(integer0);
      Integer integer1 = inlineQueryResultGif1.getGifHeight();
      assertEquals(2766, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer(0);
      inlineQueryResultGif0.setGifDuration(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifDuration();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = new Integer((-1941));
      inlineQueryResultGif0.setGifDuration(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifDuration();
      assertEquals((-1941), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = Integer.valueOf(182);
      inlineQueryResultGif0.setGifDuration(integer0);
      Integer integer1 = inlineQueryResultGif0.getGifDuration();
      assertEquals(182, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setCaption("9<Q.!R");
      String string0 = inlineQueryResultGif0.getCaption();
      assertEquals("9<Q.!R", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setGifUrl("QZZ");
      inlineQueryResultGif0.setId("QZZ");
      InputLocationMessageContent inputLocationMessageContent0 = new InputLocationMessageContent();
      inlineQueryResultGif1.setInputMessageContent(inputLocationMessageContent0);
      try { 
        inlineQueryResultGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Latitude parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.inputmessagecontent.InputLocationMessageContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setId("");
      try { 
        inlineQueryResultGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setId(", gifUrl='");
      try { 
        inlineQueryResultGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GifUrl parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      try { 
        inlineQueryResultGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ID parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setCaption("");
      String string0 = inlineQueryResultGif0.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.toString();
      assertEquals("InlineQueryResultGif{type='gif', id='null', gifUrl='null', gifWidth=null, gifHeight=null, thumbUrl='null', title='null', caption='null', inputMessageContent=null, replyMarkup=null, gifDuration=null, parseMode='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = inlineQueryResultGif0.getGifHeight();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = inlineQueryResultGif0.getGifWidth();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setTitle(", gifUrl='");
      String string0 = inlineQueryResultGif0.getTitle();
      assertEquals(", gifUrl='", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      Integer integer0 = inlineQueryResultGif0.getGifDuration();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getThumbUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineQueryResultGif0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setId("J8f9ursquareId='");
      inlineQueryResultGif1.setGifUrl("J8f9ursquareId='");
      inlineQueryResultGif0.validate();
      assertNull(inlineQueryResultGif0.getGifDuration());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getType();
      assertEquals("gif", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InputMessageContent inputMessageContent0 = inlineQueryResultGif0.getInputMessageContent();
      assertNull(inputMessageContent0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      inlineQueryResultGif0.setParseMode("");
      String string0 = inlineQueryResultGif0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      String string0 = inlineQueryResultGif0.getGifUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setGifUrl("");
      inlineQueryResultGif1.setId(", gifUrl='");
      try { 
        inlineQueryResultGif0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GifUrl parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultGif", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = inlineQueryResultGif0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InlineQueryResultGif inlineQueryResultGif0 = new InlineQueryResultGif();
      InlineQueryResultGif inlineQueryResultGif1 = inlineQueryResultGif0.setId("J8f9ursquareId='");
      inlineQueryResultGif1.setGifUrl("J8f9ursquareId='");
      inlineQueryResultGif0.validate();
      assertNull(inlineQueryResultGif0.getGifHeight());
  }
}
