/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:04:53 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StopMessageLiveLocation_ESTest extends StopMessageLiveLocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      Integer integer0 = new Integer(0);
      stopMessageLiveLocation0.setMessageId(integer0);
      Integer integer1 = stopMessageLiveLocation0.getMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      Integer integer0 = new Integer(2160);
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setMessageId(integer0);
      Integer integer1 = stopMessageLiveLocation1.getMessageId();
      assertEquals(2160, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      Integer integer0 = Integer.getInteger((String) null, (-2058));
      stopMessageLiveLocation0.setMessageId(integer0);
      Integer integer1 = stopMessageLiveLocation0.getMessageId();
      assertEquals((-2058), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setInlineMessageId("reply_markup");
      String string0 = stopMessageLiveLocation1.getInlineMessageId();
      assertEquals("reply_markup", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      stopMessageLiveLocation0.setInlineMessageId("");
      String string0 = stopMessageLiveLocation0.getInlineMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      stopMessageLiveLocation0.setChatId("stopMessageLiveLocation");
      String string0 = stopMessageLiveLocation0.getChatId();
      assertEquals("stopMessageLiveLocation", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      stopMessageLiveLocation0.setChatId("");
      String string0 = stopMessageLiveLocation0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setInlineMessageId("");
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      linkedList0.add((List<InlineKeyboardButton>) null);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard(linkedList0);
      stopMessageLiveLocation1.setReplyMarkup(inlineKeyboardMarkup1);
      // Undeclared exception!
      try { 
        stopMessageLiveLocation0.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      // Undeclared exception!
      try { 
        stopMessageLiveLocation0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      // Undeclared exception!
      try { 
        stopMessageLiveLocation0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setInlineMessageId("wf>,Kwd`vF)])U");
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      stopMessageLiveLocation1.setReplyMarkup(inlineKeyboardMarkup0);
      stopMessageLiveLocation1.validate();
      assertEquals("wf>,Kwd`vF)])U", stopMessageLiveLocation1.getInlineMessageId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setInlineMessageId("reply_markup");
      Integer integer0 = new Integer((-1044));
      stopMessageLiveLocation1.setMessageId(integer0);
      try { 
        stopMessageLiveLocation1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setInlineMessageId("stopMessageLiveLocation");
      stopMessageLiveLocation1.setChatId("stopMessageLiveLocation");
      try { 
        stopMessageLiveLocation1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter must be empty if inlineMessageId is provided
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      try { 
        stopMessageLiveLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      String string0 = stopMessageLiveLocation0.toString();
      assertEquals("StopMessageLiveLocation{chatId='null', messageId=null, inlineMessageId='null', replyMarkup=null}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      String string0 = stopMessageLiveLocation0.getInlineMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      String string0 = stopMessageLiveLocation0.getMethod();
      assertEquals("stopMessageLiveLocation", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setInlineMessageId("wf>,Kwd`vF)])U");
      stopMessageLiveLocation1.validate();
      assertEquals("wf>,Kwd`vF)])U", stopMessageLiveLocation1.getInlineMessageId());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      Integer integer0 = stopMessageLiveLocation0.getMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      stopMessageLiveLocation0.setChatId("stopMessageLiveLocation");
      try { 
        stopMessageLiveLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // MessageId parameter can't be empty if inlineMessageId is not present
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      String string0 = stopMessageLiveLocation0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = stopMessageLiveLocation0.getReplyMarkup();
      assertNull(inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setReplyMarkup(inlineKeyboardMarkup0);
      InlineKeyboardMarkup inlineKeyboardMarkup1 = stopMessageLiveLocation1.getReplyMarkup();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      Integer integer0 = Integer.valueOf((-3295));
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setMessageId(integer0);
      stopMessageLiveLocation1.setChatId("stopMessageLiveLocation");
      stopMessageLiveLocation0.validate();
      assertEquals("stopMessageLiveLocation", stopMessageLiveLocation0.getChatId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      Long long0 = new Long((-9L));
      StopMessageLiveLocation stopMessageLiveLocation1 = stopMessageLiveLocation0.setChatId(long0);
      assertSame(stopMessageLiveLocation0, stopMessageLiveLocation1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StopMessageLiveLocation stopMessageLiveLocation0 = new StopMessageLiveLocation();
      try { 
        stopMessageLiveLocation0.deserializeResponse("stopMessageLiveLocation");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.StopMessageLiveLocation", e);
      }
  }
}
