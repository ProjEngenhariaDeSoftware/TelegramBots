/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:46:16 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.passport;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.passport.EncryptedCredentials;
import org.telegram.telegrambots.meta.api.objects.passport.EncryptedPassportElement;
import org.telegram.telegrambots.meta.api.objects.passport.PassportData;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PassportData_ESTest extends PassportData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EncryptedCredentials encryptedCredentials0 = mock(EncryptedCredentials.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(encryptedCredentials0).toString();
      PassportData passportData0 = new PassportData((List<EncryptedPassportElement>) null, encryptedCredentials0);
      EncryptedCredentials encryptedCredentials1 = passportData0.getCredentials();
      assertNull(encryptedCredentials1.getData());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PassportData passportData0 = new PassportData();
      EncryptedCredentials encryptedCredentials0 = passportData0.getCredentials();
      assertNull(encryptedCredentials0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PassportData passportData0 = new PassportData();
      String string0 = passportData0.toString();
      assertEquals("PassportData{data=null, credentials=null}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PassportData passportData0 = new PassportData();
      List<EncryptedPassportElement> list0 = passportData0.getData();
      assertNull(list0);
  }
}
