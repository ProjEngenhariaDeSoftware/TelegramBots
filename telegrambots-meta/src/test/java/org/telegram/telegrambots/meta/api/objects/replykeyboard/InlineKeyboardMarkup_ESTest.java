/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:26:51 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects.replykeyboard;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InlineKeyboardMarkup_ESTest extends InlineKeyboardMarkup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard((List<List<InlineKeyboardButton>>) null);
      List<List<InlineKeyboardButton>> list0 = (List<List<InlineKeyboardButton>>)inlineKeyboardMarkup1.getKeyboard();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      inlineKeyboardMarkup0.setKeyboard(linkedList0);
      LinkedList<InlineKeyboardButton> linkedList1 = new LinkedList<InlineKeyboardButton>();
      linkedList0.add((List<InlineKeyboardButton>) linkedList1);
      List<List<InlineKeyboardButton>> list0 = (List<List<InlineKeyboardButton>>)inlineKeyboardMarkup0.getKeyboard();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard(linkedList0);
      linkedList0.add((List<InlineKeyboardButton>) null);
      // Undeclared exception!
      try { 
        inlineKeyboardMarkup1.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      InlineKeyboardMarkup inlineKeyboardMarkup1 = new InlineKeyboardMarkup();
      boolean boolean0 = inlineKeyboardMarkup0.equals(inlineKeyboardMarkup1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      boolean boolean0 = inlineKeyboardMarkup0.equals(inlineKeyboardMarkup0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      boolean boolean0 = inlineKeyboardMarkup0.equals(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      LinkedList<List<InlineKeyboardButton>> linkedList0 = new LinkedList<List<InlineKeyboardButton>>();
      InlineKeyboardMarkup inlineKeyboardMarkup1 = inlineKeyboardMarkup0.setKeyboard(linkedList0);
      LinkedList<InlineKeyboardButton> linkedList1 = new LinkedList<InlineKeyboardButton>();
      linkedList0.add((List<InlineKeyboardButton>) linkedList1);
      InlineKeyboardButton inlineKeyboardButton0 = new InlineKeyboardButton("InlineKeyboardMarkup{inline_keyboard=[]}");
      linkedList1.add(inlineKeyboardButton0);
      inlineKeyboardMarkup1.validate();
      assertSame(inlineKeyboardMarkup1, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineKeyboardMarkup0.setKeyboard((List<List<InlineKeyboardButton>>) null);
      try { 
        inlineKeyboardMarkup0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Keyboard parameter can't be null
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      inlineKeyboardMarkup0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      List<List<InlineKeyboardButton>> list0 = (List<List<InlineKeyboardButton>>)inlineKeyboardMarkup0.getKeyboard();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      String string0 = inlineKeyboardMarkup0.toString();
      assertEquals("InlineKeyboardMarkup{inline_keyboard=[]}", string0);
  }
}
