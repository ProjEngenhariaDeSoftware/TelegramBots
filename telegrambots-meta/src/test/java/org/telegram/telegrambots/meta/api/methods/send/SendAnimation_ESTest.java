/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:26:50 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.send;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.send.SendAnimation;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ForceReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SendAnimation_ESTest extends SendAnimation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      MockFile mockFile0 = new MockFile("thumb");
      SendAnimation sendAnimation1 = sendAnimation0.setAnimation((File) mockFile0);
      assertSame(sendAnimation1, sendAnimation0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(0);
      sendAnimation0.setWidth(integer0);
      Integer integer1 = sendAnimation0.getWidth();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer((-1180));
      SendAnimation sendAnimation1 = sendAnimation0.setWidth(integer0);
      Integer integer1 = sendAnimation1.getWidth();
      assertEquals((-1180), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(244);
      sendAnimation0.setWidth(integer0);
      Integer integer1 = sendAnimation0.getWidth();
      assertEquals(244, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      InputFile inputFile0 = new InputFile((File) null, "chat_id");
      sendAnimation0.setThumb(inputFile0);
      InputFile inputFile1 = sendAnimation0.getThumb();
      assertTrue(inputFile1.isNew());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      InputFile inputFile0 = new InputFile("'883._5'_MLBqh'x6r");
      sendAnimation0.setThumb(inputFile0);
      InputFile inputFile1 = sendAnimation0.getThumb();
      assertFalse(inputFile1.isNew());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(0);
      sendAnimation0.setReplyToMessageId(integer0);
      Integer integer1 = sendAnimation0.getReplyToMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(31);
      sendAnimation0.setReplyToMessageId(integer0);
      Integer integer1 = sendAnimation0.getReplyToMessageId();
      assertEquals(31, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer((-2354));
      SendAnimation sendAnimation1 = sendAnimation0.setReplyToMessageId(integer0);
      Integer integer1 = sendAnimation1.getReplyToMessageId();
      assertEquals((-2354), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      InlineKeyboardMarkup inlineKeyboardMarkup0 = new InlineKeyboardMarkup();
      SendAnimation sendAnimation1 = sendAnimation0.setReplyMarkup(inlineKeyboardMarkup0);
      ReplyKeyboard replyKeyboard0 = sendAnimation1.getReplyMarkup();
      assertSame(replyKeyboard0, inlineKeyboardMarkup0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.setParseMode("parse_mode");
      String string0 = sendAnimation0.getParseMode();
      assertEquals("parse_mode", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.setParseMode("");
      String string0 = sendAnimation0.getParseMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(0);
      sendAnimation0.setHeight(integer0);
      Integer integer1 = sendAnimation0.getHeight();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(125);
      sendAnimation0.setHeight(integer0);
      Integer integer1 = sendAnimation0.getHeight();
      assertEquals(125, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer((-1569));
      SendAnimation sendAnimation1 = sendAnimation0.setHeight(integer0);
      Integer integer1 = sendAnimation1.getHeight();
      assertEquals((-1569), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(0);
      sendAnimation0.setDuration(integer0);
      Integer integer1 = sendAnimation0.getDuration();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer(86);
      sendAnimation0.setDuration(integer0);
      Integer integer1 = sendAnimation0.getDuration();
      assertEquals(86, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = new Integer((-324));
      SendAnimation sendAnimation1 = sendAnimation0.setDuration(integer0);
      Integer integer1 = sendAnimation1.getDuration();
      assertEquals((-324), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Long long0 = new Long((-7L));
      sendAnimation0.setChatId(long0);
      String string0 = sendAnimation0.getChatId();
      assertEquals("-7", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.setChatId("");
      String string0 = sendAnimation0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      SendAnimation sendAnimation1 = sendAnimation0.setCaption("4d_+pY3kZEj]vJ");
      String string0 = sendAnimation1.getCaption();
      assertEquals("4d_+pY3kZEj]vJ", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.setCaption("");
      String string0 = sendAnimation0.getCaption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      File file0 = MockFile.createTempFile("width", "reply_markup");
      InputFile inputFile0 = new InputFile(file0, "ac^R_2n0=0yD");
      SendAnimation sendAnimation1 = sendAnimation0.setAnimation(inputFile0);
      InputFile inputFile1 = sendAnimation1.getAnimation();
      assertSame(inputFile1, inputFile0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.setAnimation("RemoveKeyboard parameter can't be null");
      InputFile inputFile0 = sendAnimation0.getAnimation();
      assertEquals("RemoveKeyboard parameter can't be null", inputFile0.getAttachName());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      // Undeclared exception!
      try { 
        sendAnimation0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      // Undeclared exception!
      try { 
        sendAnimation0.setAnimation("Unable to deserialize response", (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // inputStream cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      // Undeclared exception!
      try { 
        sendAnimation0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1565);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      SendAnimation sendAnimation1 = sendAnimation0.setAnimation("k1?S", (InputStream) dataInputStream0);
      SendAnimation sendAnimation2 = sendAnimation0.setChatId("width");
      InputFile inputFile0 = new InputFile(bufferedInputStream0, "parse_mode");
      sendAnimation2.setThumb(inputFile0);
      sendAnimation1.validate();
      assertEquals("width", sendAnimation1.getChatId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1565);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      sendAnimation0.setAnimation("k1?S", (InputStream) dataInputStream0);
      sendAnimation0.setChatId("width");
      ForceReplyKeyboard forceReplyKeyboard0 = new ForceReplyKeyboard();
      sendAnimation0.setReplyMarkup(forceReplyKeyboard0);
      sendAnimation0.validate();
      assertEquals("width", sendAnimation0.getChatId());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      try { 
        sendAnimation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendAnimation", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = sendAnimation0.getHeight();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.setChatId("width");
      try { 
        sendAnimation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Animation parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendAnimation", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      InputFile inputFile0 = sendAnimation0.getAnimation();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      String string0 = sendAnimation0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      // Undeclared exception!
      try { 
        sendAnimation0.setAnimation((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendAnimation", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      String string0 = sendAnimation0.getCaption();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      String string0 = sendAnimation0.getParseMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      String string0 = sendAnimation0.toString();
      assertEquals("SendAnimation{chatId='null', animation=null, duration=null, caption='null', width=null, height=null, disableNotification=null, replyToMessageId=null, replyMarkup=null, parseMode='null', thumb=null}", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      ReplyKeyboard replyKeyboard0 = sendAnimation0.getReplyMarkup();
      assertNull(replyKeyboard0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = sendAnimation0.getDuration();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      // Undeclared exception!
      try { 
        sendAnimation0.setAnimation((InputFile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // animation cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.disableNotification();
      Boolean boolean0 = sendAnimation0.getDisableNotification();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      sendAnimation0.enableNotification();
      Boolean boolean0 = sendAnimation0.getDisableNotification();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      InputFile inputFile0 = sendAnimation0.getThumb();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = sendAnimation0.getReplyToMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Integer integer0 = sendAnimation0.getWidth();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      Boolean boolean0 = sendAnimation0.getDisableNotification();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SendAnimation sendAnimation0 = new SendAnimation();
      try { 
        sendAnimation0.deserializeResponse("reply_markup");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendAnimation", e);
      }
  }
}
