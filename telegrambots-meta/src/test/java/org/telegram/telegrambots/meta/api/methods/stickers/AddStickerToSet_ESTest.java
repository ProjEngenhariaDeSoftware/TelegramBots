/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 12:57:55 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.stickers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.stickers.MaskPosition;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AddStickerToSet_ESTest extends AddStickerToSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      Integer integer0 = new Integer((-1));
      AddStickerToSet addStickerToSet1 = addStickerToSet0.setUserId(integer0);
      try { 
        addStickerToSet1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // userId can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      // Undeclared exception!
      try { 
        addStickerToSet0.deserializeResponse("{}u`B&),M]{I#x*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      Integer integer0 = addStickerToSet0.getUserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(795);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "' (expected type: ", "-V\"u@gWL?uMW'ON.g");
      addStickerToSet0.getUserId();
      assertEquals("' (expected type: ", addStickerToSet0.getName());
      assertEquals("-V\"u@gWL?uMW'ON.g", addStickerToSet0.getEmojis());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-3919));
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "", "");
      addStickerToSet0.getUserId();
      assertEquals("", addStickerToSet0.getName());
      assertEquals("", addStickerToSet0.getEmojis());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      File file0 = MockFile.createTempFile("name", "mask_position");
      addStickerToSet0.setPngSticker(file0);
      InputFile inputFile0 = addStickerToSet0.getPngSticker();
      assertEquals("name0mask_position", inputFile0.getMediaName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      addStickerToSet0.setPngSticker("");
      InputFile inputFile0 = addStickerToSet0.getPngSticker();
      assertEquals("", inputFile0.getAttachName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      addStickerToSet0.setName("name");
      String string0 = addStickerToSet0.getName();
      assertEquals("name", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "", "");
      String string0 = addStickerToSet0.getName();
      assertEquals("", addStickerToSet0.getEmojis());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      MaskPosition maskPosition0 = new MaskPosition();
      AddStickerToSet addStickerToSet1 = addStickerToSet0.setMaskPosition(maskPosition0);
      MaskPosition maskPosition1 = addStickerToSet1.getMaskPosition();
      assertNull(maskPosition1.getPoint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-159));
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "z&iPfz~/:+y)vg>.I|", "G;(0y1K");
      String string0 = addStickerToSet0.getEmojis();
      assertEquals("G;(0y1K", string0);
      assertEquals("z&iPfz~/:+y)vg>.I|", addStickerToSet0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(775);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "", "");
      String string0 = addStickerToSet0.getEmojis();
      assertEquals("", addStickerToSet0.getName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      // Undeclared exception!
      try { 
        addStickerToSet0.setPngSticker("", (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pngSticker cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      // Undeclared exception!
      try { 
        addStickerToSet0.setPngSticker((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pngSticker cannot be null!
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      try { 
        addStickerToSet0.deserializeResponse("mask_position");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-5689));
      AddStickerToSet addStickerToSet0 = null;
      try {
        addStickerToSet0 = new AddStickerToSet(integer0, (String) null, ", maskPosition=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(1);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "s", "s");
      MaskPosition maskPosition0 = new MaskPosition();
      AddStickerToSet addStickerToSet1 = addStickerToSet0.setMaskPosition(maskPosition0);
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      addStickerToSet1.setPngSticker("addStickerToSet", (InputStream) byteArrayInputStream0);
      try { 
        addStickerToSet0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // point can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.stickers.MaskPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(32767);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "", "");
      addStickerToSet0.setName("addStickerToSet");
      try { 
        addStickerToSet0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // emojis can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      addStickerToSet0.setName("png_sticker");
      AddStickerToSet addStickerToSet1 = addStickerToSet0.setEmojis("mask_position");
      Integer integer0 = new Integer(1129);
      addStickerToSet1.setUserId(integer0);
      try { 
        addStickerToSet1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PngSticker can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(32767);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "", "");
      try { 
        addStickerToSet0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      AddStickerToSet addStickerToSet1 = addStickerToSet0.setName("png_sticker");
      Integer integer0 = new Integer(1129);
      addStickerToSet1.setUserId(integer0);
      try { 
        addStickerToSet1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // emojis can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(0);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "4V4PXLBu", "4V4PXLBu");
      try { 
        addStickerToSet0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // userId can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      Integer integer0 = new Integer(1129);
      addStickerToSet0.setUserId(integer0);
      try { 
        addStickerToSet0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      try { 
        addStickerToSet0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // userId can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.stickers.AddStickerToSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(0);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "C,Hj", "");
      String string0 = addStickerToSet0.toString();
      assertEquals("AddStickerToSet{userId=0, name='C,Hj', emojis='', maskPosition=null, pngSticker=null}", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      String string0 = addStickerToSet0.getEmojis();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      InputFile inputFile0 = addStickerToSet0.getPngSticker();
      assertNull(inputFile0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      AddStickerToSet addStickerToSet1 = addStickerToSet0.setPngSticker("user_id", (InputStream) sequenceInputStream0);
      addStickerToSet1.setName("png_sticker");
      AddStickerToSet addStickerToSet2 = addStickerToSet0.setEmojis("mask_position");
      Integer integer0 = new Integer(1129);
      addStickerToSet2.setUserId(integer0);
      addStickerToSet2.validate();
      assertEquals("mask_position", addStickerToSet2.getEmojis());
      assertEquals("png_sticker", addStickerToSet2.getName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(0);
      AddStickerToSet addStickerToSet0 = new AddStickerToSet(integer0, "C,Hj", "");
      addStickerToSet0.getUserId();
      assertEquals("", addStickerToSet0.getEmojis());
      assertEquals("C,Hj", addStickerToSet0.getName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      MaskPosition maskPosition0 = addStickerToSet0.getMaskPosition();
      assertNull(maskPosition0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AddStickerToSet addStickerToSet0 = new AddStickerToSet();
      String string0 = addStickerToSet0.getName();
      assertNull(string0);
  }
}
