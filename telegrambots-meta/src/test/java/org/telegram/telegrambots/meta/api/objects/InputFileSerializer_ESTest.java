/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:46:50 GMT 2018
 */

package org.telegram.telegrambots.meta.api.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.SerializerProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.InputFileSerializer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InputFileSerializer_ESTest extends InputFileSerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InputFileSerializer inputFileSerializer0 = new InputFileSerializer();
      InputFile inputFile0 = mock(InputFile.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(inputFile0).getAttachName();
      SerializerProvider serializerProvider0 = mock(SerializerProvider.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        inputFileSerializer0.serialize(inputFile0, (JsonGenerator) null, serializerProvider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.objects.InputFileSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InputFileSerializer inputFileSerializer0 = new InputFileSerializer();
      InputFile inputFile0 = mock(InputFile.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(inputFile0).getAttachName();
      JsonGenerator jsonGenerator0 = mock(JsonGenerator.class, new ViolatedAssumptionAnswer());
      SerializerProvider serializerProvider0 = mock(SerializerProvider.class, new ViolatedAssumptionAnswer());
      inputFileSerializer0.serialize(inputFile0, jsonGenerator0, serializerProvider0);
      assertFalse(inputFileSerializer0.isUnwrappingSerializer());
  }
}
