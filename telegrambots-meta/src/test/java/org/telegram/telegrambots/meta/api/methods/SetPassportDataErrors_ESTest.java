/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 13:14:47 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.SetPassportDataErrors;
import org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementError;
import org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorDataField;
import org.telegram.telegrambots.meta.api.objects.passport.dataerror.PassportElementErrorFrontSide;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SetPassportDataErrors_ESTest extends SetPassportDataErrors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      Integer integer0 = new Integer(0);
      setPassportDataErrors0.setUserId(integer0);
      Integer integer1 = setPassportDataErrors0.getUserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-393));
      Vector<PassportElementError> vector0 = new Vector<PassportElementError>();
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors(integer0, vector0);
      Integer integer1 = setPassportDataErrors0.getUserId();
      assertEquals((-393), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      Integer integer0 = new Integer(2033);
      SetPassportDataErrors setPassportDataErrors1 = setPassportDataErrors0.setUserId(integer0);
      Integer integer1 = setPassportDataErrors1.getUserId();
      assertEquals(2033, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-393));
      Vector<PassportElementError> vector0 = new Vector<PassportElementError>();
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors(integer0, vector0);
      List<PassportElementError> list0 = setPassportDataErrors0.getErrors();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      PassportElementErrorDataField passportElementErrorDataField0 = new PassportElementErrorDataField("setPassportDataErrors", "setPassportDataErrors", "setPassportDataErrors", "!a_p_");
      SetPassportDataErrors setPassportDataErrors1 = setPassportDataErrors0.addError(passportElementErrorDataField0);
      List<PassportElementError> list0 = setPassportDataErrors1.getErrors();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      // Undeclared exception!
      try { 
        setPassportDataErrors0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      // Undeclared exception!
      try { 
        setPassportDataErrors0.addError((PassportElementError) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      Stack<PassportElementError> stack0 = new Stack<PassportElementError>();
      SetPassportDataErrors setPassportDataErrors1 = setPassportDataErrors0.setErrors(stack0);
      Integer integer0 = new Integer(2441);
      setPassportDataErrors0.setUserId(integer0);
      try { 
        setPassportDataErrors1.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Errors can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.SetPassportDataErrors", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      try { 
        setPassportDataErrors0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // User ID can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.SetPassportDataErrors", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      Integer integer0 = new Integer(2441);
      setPassportDataErrors0.setUserId(integer0);
      try { 
        setPassportDataErrors0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Errors can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.SetPassportDataErrors", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      PassportElementErrorFrontSide passportElementErrorFrontSide0 = new PassportElementErrorFrontSide();
      setPassportDataErrors0.addError(passportElementErrorFrontSide0);
      Integer integer0 = new Integer(2441);
      setPassportDataErrors0.setUserId(integer0);
      setPassportDataErrors0.validate();
      assertEquals("setPassportDataErrors", setPassportDataErrors0.getMethod());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(2990);
      Stack<PassportElementError> stack0 = new Stack<PassportElementError>();
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors(integer0, stack0);
      try { 
        setPassportDataErrors0.deserializeResponse("setPassportDataErrors");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.SetPassportDataErrors", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      Stack<PassportElementError> stack0 = new Stack<PassportElementError>();
      setPassportDataErrors0.setErrors(stack0);
      PassportElementErrorFrontSide passportElementErrorFrontSide0 = new PassportElementErrorFrontSide();
      SetPassportDataErrors setPassportDataErrors1 = setPassportDataErrors0.addError(passportElementErrorFrontSide0);
      assertNull(setPassportDataErrors1.getUserId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = null;
      try {
        setPassportDataErrors0 = new SetPassportDataErrors((Integer) null, (List<PassportElementError>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      String string0 = setPassportDataErrors0.getMethod();
      assertEquals("setPassportDataErrors", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      Integer integer0 = setPassportDataErrors0.getUserId();
      SetPassportDataErrors setPassportDataErrors1 = setPassportDataErrors0.setUserId(integer0);
      assertNull(setPassportDataErrors1.getUserId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SetPassportDataErrors setPassportDataErrors0 = new SetPassportDataErrors();
      List<PassportElementError> list0 = setPassportDataErrors0.getErrors();
      assertNull(list0);
  }
}
