/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 26 12:57:47 GMT 2018
 */

package org.telegram.telegrambots.meta.api.methods.send;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.send.SendLocation;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ForceReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SendLocation_ESTest extends SendLocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Float float0 = new Float(0.0);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer(86400);
      sendLocation0.setLivePeriod(integer0);
      sendLocation0.setChatId("M+uf^TkLO,FS4'a");
      sendLocation0.validate();
      assertEquals("M+uf^TkLO,FS4'a", sendLocation0.getChatId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float((-3908.9226F));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Long long0 = new Long((-17L));
      sendLocation0.setChatId(long0);
      Integer integer0 = new Integer(60);
      sendLocation0.setLivePeriod(integer0);
      sendLocation0.validate();
      assertEquals("sendlocation", sendLocation0.getMethod());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Float float0 = new Float(521.9475931978);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer(0);
      sendLocation0.setReplyToMessageId(integer0);
      Integer integer1 = sendLocation0.getReplyToMessageId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Float float0 = new Float(0.0F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer((-32768));
      SendLocation sendLocation1 = sendLocation0.setReplyToMessageId(integer0);
      Integer integer1 = sendLocation1.getReplyToMessageId();
      assertEquals((-32768), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Float float0 = new Float(4458.7686F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer((-2282));
      sendLocation0.setReplyToMessageId(integer0);
      Integer integer1 = sendLocation0.getReplyToMessageId();
      assertEquals((-2282), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Float float0 = new Float(0.0);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer(86400);
      sendLocation0.setReplyToMessageId(integer0);
      Integer integer1 = sendLocation0.getReplyToMessageId();
      assertEquals(86400, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Float float0 = new Float(9.223372E18F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      ForceReplyKeyboard forceReplyKeyboard0 = new ForceReplyKeyboard();
      SendLocation sendLocation1 = sendLocation0.setReplyMarkup(forceReplyKeyboard0);
      ForceReplyKeyboard forceReplyKeyboard1 = (ForceReplyKeyboard)sendLocation1.getReplyMarkup();
      assertNull(forceReplyKeyboard1.getSelective());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      Float float0 = sendLocation0.getLongitude();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Float float0 = new Float(Double.NEGATIVE_INFINITY);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLongitude();
      assertEquals(Float.NEGATIVE_INFINITY, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Float float0 = new Float(542.663F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLongitude();
      assertEquals(542.663F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Float float0 = new Float(0.0);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLongitude();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Float float0 = new Float(0.0F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = new Float((-492.9125F));
      sendLocation0.setLongitude(float1);
      Float float2 = sendLocation0.getLongitude();
      assertEquals((-492.9125F), (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Float float0 = new Float((-2331.544199496442));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLongitude();
      assertEquals((-2331.5442F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      Integer integer0 = new Integer(0);
      sendLocation0.setLivePeriod(integer0);
      Integer integer1 = sendLocation0.getLivePeriod();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      Integer integer0 = new Integer(4890);
      SendLocation sendLocation1 = sendLocation0.setLivePeriod(integer0);
      Integer integer1 = sendLocation1.getLivePeriod();
      assertEquals(4890, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      Integer integer0 = new Integer((-2114));
      sendLocation0.setLivePeriod(integer0);
      Integer integer1 = sendLocation0.getLivePeriod();
      assertEquals((-2114), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      Float float0 = sendLocation0.getLatitude();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Float float0 = new Float(Float.NaN);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLatitude();
      assertEquals(Float.NaN, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Float float0 = new Float(Float.POSITIVE_INFINITY);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLatitude();
      assertEquals(Float.POSITIVE_INFINITY, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Float float0 = new Float(0.0F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = new Float(1260.1317F);
      sendLocation0.setLatitude(float1);
      Float float2 = sendLocation0.getLatitude();
      assertEquals(1260.1317F, (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Float float0 = new Float(0.0);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLatitude();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = new Float((-1947.7529F));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLatitude();
      assertEquals((-1947.7529F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Float float0 = new Float(544.502F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      SendLocation sendLocation1 = sendLocation0.disableNotification();
      Boolean boolean0 = sendLocation1.getDisableNotification();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      SendLocation sendLocation1 = sendLocation0.enableNotification();
      Boolean boolean0 = sendLocation1.getDisableNotification();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Long long0 = new Long(532L);
      sendLocation0.setChatId(long0);
      String string0 = sendLocation0.getChatId();
      assertEquals("532", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      sendLocation0.setChatId("");
      String string0 = sendLocation0.getChatId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      // Undeclared exception!
      try { 
        sendLocation0.setLongitude((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      // Undeclared exception!
      try { 
        sendLocation0.setLatitude((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Float float0 = new Float((-1954.174955));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      // Undeclared exception!
      try { 
        sendLocation0.setChatId((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      // Undeclared exception!
      try { 
        sendLocation0.deserializeResponse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SendLocation sendLocation0 = null;
      try {
        sendLocation0 = new SendLocation((Float) null, (Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Float float0 = new Float(0.0);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer(86415);
      sendLocation0.setLivePeriod(integer0);
      sendLocation0.setChatId("51xI~E]r7");
      try { 
        sendLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Live period parameter must be between 60 and 86400
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Float float0 = new Float(0.0);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = new Integer((-4082));
      sendLocation0.setLivePeriod(integer0);
      sendLocation0.setChatId("sendlocation");
      try { 
        sendLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Live period parameter must be between 60 and 86400
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Float float0 = new Float((-3908.9226F));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Long long0 = new Long((-17L));
      sendLocation0.setChatId(long0);
      ReplyKeyboardMarkup replyKeyboardMarkup0 = new ReplyKeyboardMarkup();
      sendLocation0.setReplyMarkup(replyKeyboardMarkup0);
      sendLocation0.validate();
      assertEquals((-3908.9226F), sendLocation0.getLongitude(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      Float float0 = new Float((double) 0L);
      sendLocation0.setLatitude(float0);
      Long long0 = new Long(0L);
      sendLocation0.setChatId(long0);
      try { 
        sendLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Longitude parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      sendLocation0.setChatId("sendlocation");
      try { 
        sendLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Latitude parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SendLocation sendLocation0 = new SendLocation();
      try { 
        sendLocation0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ChatId parameter can't be empty
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Float float0 = new Float(Float.POSITIVE_INFINITY);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      try { 
        sendLocation0.deserializeResponse("\" can not be represented as BigDecimal");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to deserialize response
         //
         verifyException("org.telegram.telegrambots.meta.api.methods.send.SendLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = sendLocation0.getLivePeriod();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Integer integer0 = sendLocation0.getReplyToMessageId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      ReplyKeyboard replyKeyboard0 = sendLocation0.getReplyMarkup();
      assertNull(replyKeyboard0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Float float0 = new Float(Float.NaN);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Float float1 = sendLocation0.getLongitude();
      assertEquals(Float.NaN, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      String string0 = sendLocation0.toString();
      assertEquals("SendLocation{chatId='null', latitude=-68.77206, longitude=-68.77206, disableNotification=null, replyToMessageId=null, replyMarkup=null, livePeriod=null}", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      String string0 = sendLocation0.getChatId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Float float0 = new Float((-68.772052958392));
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      String string0 = sendLocation0.getMethod();
      assertEquals("sendlocation", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Float float0 = new Float(544.502F);
      SendLocation sendLocation0 = new SendLocation(float0, float0);
      Boolean boolean0 = sendLocation0.getDisableNotification();
      assertNull(boolean0);
  }
}
