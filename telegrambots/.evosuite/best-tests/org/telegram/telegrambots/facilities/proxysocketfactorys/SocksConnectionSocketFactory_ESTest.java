/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 22 18:28:47 GMT 2018
 */

package org.telegram.telegrambots.facilities.proxysocketfactorys;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import org.apache.http.HttpHost;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpCoreContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.facilities.proxysocketfactorys.SocksConnectionSocketFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SocksConnectionSocketFactory_ESTest extends SocksConnectionSocketFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      MockSocket mockSocket0 = new MockSocket();
      HttpHost httpHost0 = new HttpHost("", 0, "");
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("txCAIO#!I@", 1268);
      InetAddress inetAddress0 = MockInetAddress.getByName("defaults: ");
      MockInetSocketAddress mockInetSocketAddress1 = new MockInetSocketAddress(inetAddress0, 0);
      BasicHttpContext basicHttpContext0 = new BasicHttpContext();
      try { 
        socksConnectionSocketFactory0.connectSocket(0, mockSocket0, httpHost0, mockInetSocketAddress0, mockInetSocketAddress1, basicHttpContext0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoSuiteSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      HttpCoreContext httpCoreContext0 = new HttpCoreContext();
      Integer integer0 = new Integer(0);
      httpCoreContext0.setAttribute("socksVersion", integer0);
      // Undeclared exception!
      try { 
        socksConnectionSocketFactory0.createSocket(httpCoreContext0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type SOCKS is not compatible with address null
         //
         verifyException("java.net.Proxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      BasicHttpContext basicHttpContext0 = new BasicHttpContext();
      basicHttpContext0.setAttribute("socksVersion", socksConnectionSocketFactory0);
      // Undeclared exception!
      try { 
        socksConnectionSocketFactory0.createSocket(basicHttpContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.telegram.telegrambots.facilities.proxysocketfactorys.SocksConnectionSocketFactory cannot be cast to java.lang.Integer
         //
         verifyException("org.telegram.telegrambots.facilities.proxysocketfactorys.SocksConnectionSocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      InetAddress inetAddress0 = MockInetAddress.getByName("org.apache.http.protocol.SyncBasicHttpContext");
      HttpHost httpHost0 = new HttpHost(inetAddress0, 0, "_L2K&SJqw<J=6Sp%kOo");
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("", 0);
      BasicHttpContext basicHttpContext0 = new BasicHttpContext();
      try { 
        socksConnectionSocketFactory0.connectSocket(1148, mockSocket0, httpHost0, inetSocketAddress0, inetSocketAddress0, basicHttpContext0);
        fail("Expecting exception: SocketException");
      
      } catch(SocketException e) {
         //
         // Unresolved address
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(4161);
      HttpCoreContext httpCoreContext0 = HttpCoreContext.create();
      Integer integer0 = new Integer(4161);
      httpCoreContext0.setAttribute("socksVersion", integer0);
      HttpHost httpHost0 = HttpHost.create("socksVersion");
      // Undeclared exception!
      try { 
        socksConnectionSocketFactory0.connectSocket(4161, (Socket) null, httpHost0, mockInetSocketAddress0, mockInetSocketAddress0, httpCoreContext0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type SOCKS is not compatible with address null
         //
         verifyException("java.net.Proxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(33);
      HttpCoreContext httpCoreContext0 = new HttpCoreContext();
      Integer integer0 = Integer.getInteger("http.request", 33);
      httpCoreContext0.setAttribute("socketAddress", integer0);
      HttpHost httpHost0 = HttpHost.create("http.request");
      // Undeclared exception!
      try { 
        socksConnectionSocketFactory0.connectSocket(33, (Socket) null, httpHost0, mockInetSocketAddress0, mockInetSocketAddress0, httpCoreContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.net.InetSocketAddress
         //
         verifyException("org.telegram.telegrambots.facilities.proxysocketfactorys.SocksConnectionSocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(33);
      HttpCoreContext httpCoreContext0 = new HttpCoreContext();
      HttpHost httpHost0 = HttpHost.create("http.request");
      // Undeclared exception!
      try { 
        socksConnectionSocketFactory0.connectSocket(33, (Socket) null, httpHost0, mockInetSocketAddress0, mockInetSocketAddress0, httpCoreContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.facilities.proxysocketfactorys.SocksConnectionSocketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SocksConnectionSocketFactory socksConnectionSocketFactory0 = new SocksConnectionSocketFactory();
      BasicHttpContext basicHttpContext0 = new BasicHttpContext();
      // Undeclared exception!
      try { 
        socksConnectionSocketFactory0.createSocket(basicHttpContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.facilities.proxysocketfactorys.SocksConnectionSocketFactory", e);
      }
  }
}
