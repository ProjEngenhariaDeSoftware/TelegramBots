/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 22 18:24:51 GMT 2018
 */

package org.telegram.telegrambots.updatesreceivers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.ws.rs.core.Response;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.generics.WebhookBot;
import org.telegram.telegrambots.test.Fakes.FakeWebhook;
import org.telegram.telegrambots.updatesreceivers.RestApi;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RestApi_ESTest extends RestApi_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      Update update0 = new Update();
      // Undeclared exception!
      try { 
        restApi0.updateReceived((String) null, update0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      // Undeclared exception!
      try { 
        restApi0.testReceived((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      // Undeclared exception!
      try { 
        restApi0.registerCallback((WebhookBot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.updatesreceivers.RestApi", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      FakeWebhook fakeWebhook0 = new FakeWebhook();
      restApi0.registerCallback(fakeWebhook0);
      String string0 = restApi0.testReceived("testbot");
      assertEquals("Hi there testbot!", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      String string0 = restApi0.testReceived("pY|VB=c``7fQQC+)U.");
      assertEquals("Callback not found for pY|VB=c``7fQQC+)U.", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      Update update0 = new Update();
      FakeWebhook fakeWebhook0 = new FakeWebhook();
      BotApiMethod<String> botApiMethod0 = (BotApiMethod<String>) mock(BotApiMethod.class, new ViolatedAssumptionAnswer());
      fakeWebhook0.setReturnValue(botApiMethod0);
      restApi0.registerCallback(fakeWebhook0);
      Response response0 = restApi0.updateReceived("testbot", update0);
      assertNotNull(response0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      Update update0 = new Update();
      FakeWebhook fakeWebhook0 = new FakeWebhook();
      restApi0.registerCallback(fakeWebhook0);
      Response response0 = restApi0.updateReceived("testbot", update0);
      assertNotNull(response0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      Update update0 = new Update();
      Response response0 = restApi0.updateReceived("`c<L{{<A", update0);
      assertNotNull(response0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RestApi restApi0 = new RestApi();
      FakeWebhook fakeWebhook0 = new FakeWebhook();
      restApi0.registerCallback(fakeWebhook0);
      restApi0.registerCallback(fakeWebhook0);
      assertEquals("testbot", fakeWebhook0.getBotPath());
  }
}
