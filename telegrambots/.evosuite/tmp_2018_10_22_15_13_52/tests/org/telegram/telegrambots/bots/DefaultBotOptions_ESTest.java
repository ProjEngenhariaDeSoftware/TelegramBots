/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 22 18:26:48 GMT 2018
 */

package org.telegram.telegrambots.bots;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.protocol.HttpContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.bots.DefaultBotOptions;
import org.telegram.telegrambots.updatesreceivers.ExponentialBackOff;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultBotOptions_ESTest extends DefaultBotOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      RequestConfig requestConfig0 = RequestConfig.DEFAULT;
      defaultBotOptions0.setRequestConfig(requestConfig0);
      defaultBotOptions0.getRequestConfig();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setProxyType((DefaultBotOptions.ProxyType) null);
      defaultBotOptions0.getProxyType();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setProxyPort(3000);
      int int0 = defaultBotOptions0.getProxyPort();
      assertEquals(3000, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setProxyPort((-1390));
      int int0 = defaultBotOptions0.getProxyPort();
      assertEquals((-1390), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setProxyHost("");
      defaultBotOptions0.getProxyHost();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      Integer integer0 = new Integer((-1009));
      defaultBotOptions0.setMaxWebhookConnections(integer0);
      defaultBotOptions0.getMaxWebhookConnections();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      Integer integer0 = new Integer(0);
      defaultBotOptions0.setMaxWebhookConnections(integer0);
      defaultBotOptions0.getMaxWebhookConnections();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      ExponentialBackOff exponentialBackOff0 = new ExponentialBackOff();
      defaultBotOptions0.setMaxWebhookConnections((Integer) exponentialBackOff0.DEFAULT_MAX_INTERVAL_MILLIS);
      defaultBotOptions0.getMaxWebhookConnections();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      Integer integer0 = new Integer(933);
      defaultBotOptions0.setMaxWebhookConnections(integer0);
      defaultBotOptions0.getMaxWebhookConnections();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      
      defaultBotOptions0.setMaxThreads(0);
      int int0 = defaultBotOptions0.getMaxThreads();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setMaxThreads((-1813));
      int int0 = defaultBotOptions0.getMaxThreads();
      assertEquals((-1813), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setHttpContext((HttpContext) null);
      defaultBotOptions0.getHttpContext();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      ExponentialBackOff exponentialBackOff0 = new ExponentialBackOff();
      defaultBotOptions0.setExponentialBackOff(exponentialBackOff0);
      System.setCurrentTimeMillis(500);
      defaultBotOptions0.getExponentialBackOff();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      ExponentialBackOff exponentialBackOff0 = new ExponentialBackOff();
      defaultBotOptions0.setExponentialBackOff(exponentialBackOff0);
      defaultBotOptions0.getExponentialBackOff();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      
      defaultBotOptions0.setBaseUrl((String) null);
      defaultBotOptions0.getBaseUrl();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      
      defaultBotOptions0.setBaseUrl("");
      defaultBotOptions0.getBaseUrl();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      defaultBotOptions0.setAllowedUpdates(linkedList0);
      defaultBotOptions0.getAllowedUpdates();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(", circularRedirectsAllowed=");
      defaultBotOptions0.setAllowedUpdates(linkedList0);
      defaultBotOptions0.getAllowedUpdates();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.getProxyHost();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.getRequestConfig();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      int int0 = defaultBotOptions0.getProxyPort();
      assertEquals(0, int0);
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.getMaxWebhookConnections();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      String string0 = defaultBotOptions0.getBaseUrl();
      assertEquals("https://api.telegram.org/bot", string0);
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.setProxyHost("=^)?u11 mxb{hJ");
      defaultBotOptions0.getProxyHost();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      int int0 = defaultBotOptions0.getMaxThreads();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      HttpContext httpContext0 = defaultBotOptions0.getHttpContext();
      defaultBotOptions0.setHttpContext(httpContext0);
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.getProxyType();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.getExponentialBackOff();
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
      assertEquals(1, defaultBotOptions0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultBotOptions defaultBotOptions0 = new DefaultBotOptions();
      defaultBotOptions0.getAllowedUpdates();
      assertEquals(1, defaultBotOptions0.getMaxThreads());
      assertEquals("https://api.telegram.org/bot", defaultBotOptions0.getBaseUrl());
  }
}
