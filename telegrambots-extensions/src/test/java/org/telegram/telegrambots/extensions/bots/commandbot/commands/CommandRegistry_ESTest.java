/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 15:03:18 GMT 2018
 */

package org.telegram.telegrambots.extensions.bots.commandbot.commands;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Map;
import java.util.function.BiConsumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.CommandRegistry;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.IBotCommand;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.helpCommand.HelpCommand;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.bots.AbsSender;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CommandRegistry_ESTest extends CommandRegistry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(false, "");
      IBotCommand[] iBotCommandArray0 = new IBotCommand[0];
      Map<IBotCommand, Boolean> map0 = commandRegistry0.registerAll(iBotCommandArray0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, ", leftchatmember=");
      HelpCommand helpCommand0 = new HelpCommand(", leftchatmember=", ", leftchatmember=", "6");
      commandRegistry0.register(helpCommand0);
      IBotCommand iBotCommand0 = commandRegistry0.getRegisteredCommand(", leftchatmember=");
      assertEquals(", leftchatmember=", iBotCommand0.getDescription());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(false, ";");
      IBotCommand[] iBotCommandArray0 = new IBotCommand[0];
      Map<IBotCommand, Boolean> map0 = commandRegistry0.deregisterAll(iBotCommandArray0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(false, "g");
      IBotCommand[] iBotCommandArray0 = new IBotCommand[5];
      // Undeclared exception!
      try { 
        commandRegistry0.registerAll(iBotCommandArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.extensions.bots.commandbot.commands.CommandRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, "|GQ{$d9_/xrA5i|n{");
      // Undeclared exception!
      try { 
        commandRegistry0.register((IBotCommand) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.extensions.bots.commandbot.commands.CommandRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(false, "Wfk,]t-Rq@30U=Mr4xR");
      IBotCommand[] iBotCommandArray0 = new IBotCommand[3];
      // Undeclared exception!
      try { 
        commandRegistry0.deregisterAll(iBotCommandArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.extensions.bots.commandbot.commands.CommandRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(false, "t.+g#X64S/>I)y%XhM");
      // Undeclared exception!
      try { 
        commandRegistry0.deregister((IBotCommand) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.extensions.bots.commandbot.commands.CommandRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, ", leftchatmember=");
      AbsSender absSender0 = mock(AbsSender.class, new ViolatedAssumptionAnswer());
      Message message0 = new Message();
      boolean boolean0 = commandRegistry0.executeCommand(absSender0, message0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, ", leftchatmember=");
      HelpCommand helpCommand0 = new HelpCommand(", leftchatmember=", ", leftchatmember=", "6");
      IBotCommand[] iBotCommandArray0 = new IBotCommand[6];
      iBotCommandArray0[0] = (IBotCommand) helpCommand0;
      iBotCommandArray0[1] = (IBotCommand) helpCommand0;
      iBotCommandArray0[2] = (IBotCommand) helpCommand0;
      iBotCommandArray0[3] = (IBotCommand) helpCommand0;
      iBotCommandArray0[4] = (IBotCommand) helpCommand0;
      iBotCommandArray0[5] = (IBotCommand) helpCommand0;
      Map<IBotCommand, Boolean> map0 = commandRegistry0.deregisterAll(iBotCommandArray0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      HelpCommand helpCommand0 = new HelpCommand();
      boolean boolean0 = commandRegistry0.register(helpCommand0);
      assertTrue(boolean0);
      
      boolean boolean1 = commandRegistry0.deregister(helpCommand0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      HelpCommand helpCommand0 = new HelpCommand();
      boolean boolean0 = commandRegistry0.deregister(helpCommand0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      HelpCommand helpCommand0 = new HelpCommand();
      IBotCommand[] iBotCommandArray0 = new IBotCommand[1];
      iBotCommandArray0[0] = (IBotCommand) helpCommand0;
      Map<IBotCommand, Boolean> map0 = commandRegistry0.registerAll(iBotCommandArray0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      HelpCommand helpCommand0 = new HelpCommand();
      boolean boolean0 = commandRegistry0.register(helpCommand0);
      boolean boolean1 = commandRegistry0.register(helpCommand0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      IBotCommand iBotCommand0 = commandRegistry0.getRegisteredCommand("s+");
      assertNull(iBotCommand0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      Collection<IBotCommand> collection0 = commandRegistry0.getRegisteredCommands();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(true, (String) null);
      BiConsumer<AbsSender, Message> biConsumer0 = (BiConsumer<AbsSender, Message>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      commandRegistry0.registerDefaultAction(biConsumer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommandRegistry commandRegistry0 = new CommandRegistry(false, " Q*@u|");
      AbsSender absSender0 = mock(AbsSender.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        commandRegistry0.executeCommand(absSender0, (Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.extensions.bots.commandbot.commands.CommandRegistry", e);
      }
  }
}
