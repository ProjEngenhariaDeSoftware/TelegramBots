/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 15:03:06 GMT 2018
 */

package org.telegram.telegrambots.starter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.generics.LongPollingBot;
import org.telegram.telegrambots.meta.generics.WebhookBot;
import org.telegram.telegrambots.starter.TelegramBotInitializer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TelegramBotInitializer_ESTest extends TelegramBotInitializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TelegramBotsApi telegramBotsApi0 = new TelegramBotsApi();
      LinkedList<LongPollingBot> linkedList0 = new LinkedList<LongPollingBot>();
      LinkedList<WebhookBot> linkedList1 = new LinkedList<WebhookBot>();
      TelegramBotInitializer telegramBotInitializer0 = new TelegramBotInitializer(telegramBotsApi0, linkedList0, linkedList1);
      linkedList0.add((LongPollingBot) null);
      try { 
        telegramBotInitializer0.afterPropertiesSet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.telegrambots.meta.TelegramBotsApi", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<LongPollingBot> linkedList0 = new LinkedList<LongPollingBot>();
      LinkedList<WebhookBot> linkedList1 = new LinkedList<WebhookBot>();
      TelegramBotInitializer telegramBotInitializer0 = null;
      try {
        telegramBotInitializer0 = new TelegramBotInitializer((TelegramBotsApi) null, linkedList0, linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TelegramBotsApi telegramBotsApi0 = new TelegramBotsApi();
      LinkedList<LongPollingBot> linkedList0 = new LinkedList<LongPollingBot>();
      LinkedList<WebhookBot> linkedList1 = new LinkedList<WebhookBot>();
      linkedList1.add((WebhookBot) null);
      TelegramBotInitializer telegramBotInitializer0 = new TelegramBotInitializer(telegramBotsApi0, linkedList0, linkedList1);
      telegramBotInitializer0.afterPropertiesSet();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<LongPollingBot> linkedList0 = new LinkedList<LongPollingBot>();
      LinkedList<WebhookBot> linkedList1 = new LinkedList<WebhookBot>();
      LongPollingBot longPollingBot0 = mock(LongPollingBot.class, new ViolatedAssumptionAnswer());
      linkedList0.offerLast(longPollingBot0);
      TelegramBotsApi telegramBotsApi0 = new TelegramBotsApi();
      TelegramBotInitializer telegramBotInitializer0 = new TelegramBotInitializer(telegramBotsApi0, linkedList0, linkedList1);
      try { 
        telegramBotInitializer0.afterPropertiesSet();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Guice configuration errors:
         // 
         // 1) No implementation for org.telegram.telegrambots.meta.generics.BotSession was bound.
         //   while locating org.telegram.telegrambots.meta.generics.BotSession
         // 
         // 1 error
         //
         verifyException("com.google.inject.internal.InjectorImpl", e);
      }
  }
}
