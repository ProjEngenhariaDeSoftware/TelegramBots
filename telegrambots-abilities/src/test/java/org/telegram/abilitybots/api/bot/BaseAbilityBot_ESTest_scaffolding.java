/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Oct 22 18:49:01 GMT 2018
 */

package org.telegram.abilitybots.api.bot;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BaseAbilityBot_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.telegram.abilitybots.api.bot.BaseAbilityBot"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BaseAbilityBot_ESTest_scaffolding.class.getClassLoader() ,
      "org.telegram.telegrambots.meta.api.methods.GetMe",
      "org.telegram.telegrambots.meta.exceptions.TelegramApiException",
      "org.telegram.telegrambots.meta.api.methods.BotApiMethod",
      "org.apache.http.ParseException",
      "org.telegram.telegrambots.meta.bots.AbsSender",
      "org.telegram.telegrambots.meta.api.methods.updates.GetWebhookInfo",
      "org.telegram.telegrambots.meta.api.methods.groupadministration.GetChatAdministrators",
      "org.telegram.telegrambots.meta.api.methods.GetFile",
      "org.apache.http.util.Args",
      "org.apache.http.HttpEntity",
      "org.apache.http.entity.ContentType",
      "org.apache.http.client.methods.HttpUriRequest",
      "org.apache.http.HttpRequest",
      "org.telegram.telegrambots.meta.api.interfaces.Validable",
      "org.telegram.telegrambots.meta.api.methods.PartialBotApiMethod",
      "org.apache.http.util.TextUtils",
      "org.telegram.telegrambots.meta.exceptions.TelegramApiRequestException",
      "org.telegram.telegrambots.bots.DefaultAbsSender",
      "org.apache.http.HttpMessage",
      "org.telegram.abilitybots.api.objects.Privacy",
      "org.apache.http.Consts",
      "org.telegram.abilitybots.api.sender.MessageSender",
      "org.telegram.abilitybots.api.bot.BaseAbilityBot"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BaseAbilityBot_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.telegram.telegrambots.meta.bots.AbsSender",
      "org.apache.http.Consts",
      "org.apache.http.util.Args",
      "org.apache.http.util.TextUtils",
      "org.apache.http.entity.ContentType",
      "org.telegram.telegrambots.bots.DefaultAbsSender",
      "org.telegram.abilitybots.api.bot.BaseAbilityBot",
      "com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing",
      "com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion",
      "com.fasterxml.jackson.annotation.JsonInclude$Include",
      "org.telegram.telegrambots.meta.logging.BotLogger",
      "org.telegram.abilitybots.api.util.AbilityMessageCodes",
      "org.telegram.abilitybots.api.objects.Locality",
      "org.telegram.abilitybots.api.objects.Privacy",
      "org.telegram.abilitybots.api.objects.Flag",
      "com.fasterxml.jackson.annotation.JsonProperty$Access",
      "com.fasterxml.jackson.annotation.JsonCreator$Mode",
      "org.telegram.abilitybots.api.db.MapDBContext",
      "org.mapdb.DBMaker",
      "kotlin.jvm.internal.Intrinsics",
      "org.mapdb.DBMaker$Maker",
      "org.mapdb.DBMaker$StoreType",
      "kotlin.collections.ArraysKt__ArraysJVMKt",
      "kotlin.collections.ArraysKt__ArraysKt",
      "kotlin.collections.ArraysKt___ArraysKt",
      "org.mapdb.DataIO",
      "org.mapdb.DBMaker$Maker$WhenMappings",
      "org.mapdb.volume.VolumeFactory",
      "org.mapdb.volume.Volume$1",
      "org.mapdb.volume.Volume",
      "org.mapdb.volume.RandomAccessFileVol$1",
      "org.mapdb.volume.RandomAccessFileVol",
      "org.mapdb.StoreDirectAbstract",
      "org.mapdb.StoreWAL$Companion",
      "org.mapdb.StoreWAL",
      "org.mapdb.Utils$FAKE_LOCK$1",
      "org.mapdb.Utils",
      "org.mapdb.Utils$SingleEntryReadWriteLock",
      "org.mapdb.Utils$SingleEntryReadWriteLock$newWriteLock$1",
      "org.mapdb.Utils$SingleEntryLock",
      "org.eclipse.collections.impl.primitive.AbstractLongIterable",
      "org.eclipse.collections.impl.list.mutable.primitive.LongArrayList",
      "org.eclipse.collections.impl.collection.mutable.primitive.AbstractSynchronizedLongCollection",
      "org.eclipse.collections.impl.list.mutable.primitive.SynchronizedLongList",
      "kotlin.jvm.internal.FunctionImpl",
      "kotlin.jvm.internal.Lambda",
      "org.mapdb.StoreWAL$realVolume$1",
      "org.mapdb.volume.ReadOnlyVolume",
      "org.mapdb.volume.SingleByteArrayVol$1",
      "org.mapdb.volume.SingleByteArrayVol",
      "org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap",
      "org.eclipse.collections.impl.map.mutable.primitive.AbstractMutableLongValuesMap",
      "org.eclipse.collections.impl.map.mutable.primitive.LongLongHashMap",
      "org.mapdb.WriteAheadLog$1",
      "org.mapdb.WriteAheadLog",
      "org.mapdb.DBException",
      "org.mapdb.DBException$VolumeIOError",
      "kotlin.annotation.AnnotationRetention",
      "kotlin.annotation.AnnotationTarget",
      "kotlin.ranges.RangesKt__RangesKt",
      "kotlin.ranges.RangesKt___RangesKt",
      "kotlin.ranges.LongProgression$Companion",
      "kotlin.ranges.LongProgression",
      "kotlin.ranges.LongRange$Companion",
      "kotlin.internal.ProgressionUtilKt",
      "kotlin.ranges.LongRange",
      "org.mapdb.DB$Companion",
      "org.mapdb.serializer.GroupSerializerObjectArray",
      "org.mapdb.serializer.SerializerChar",
      "org.mapdb.serializer.SerializerString",
      "org.mapdb.serializer.SerializerStringOrigHash",
      "org.mapdb.serializer.SerializerStringDelta",
      "org.mapdb.serializer.SerializerStringDelta2",
      "org.mapdb.serializer.SerializerStringIntern",
      "org.mapdb.serializer.SerializerStringAscii",
      "org.mapdb.serializer.SerializerStringNoSize",
      "org.mapdb.serializer.SerializerEightByte",
      "org.mapdb.serializer.SerializerLong",
      "org.mapdb.serializer.SerializerLongPacked",
      "org.mapdb.serializer.SerializerLongDelta",
      "org.mapdb.serializer.SerializerFourByte",
      "org.mapdb.serializer.SerializerInteger",
      "org.mapdb.serializer.SerializerIntegerPacked",
      "org.mapdb.serializer.SerializerIntegerDelta",
      "org.mapdb.serializer.SerializerBoolean",
      "org.mapdb.serializer.SerializerRecid",
      "org.mapdb.serializer.SerializerLongArray",
      "org.mapdb.serializer.SerializerRecidArray",
      "org.mapdb.serializer.SerializerIllegalAccess",
      "org.mapdb.volume.ByteArrayVol$1",
      "org.mapdb.volume.ByteArrayVol",
      "net.jpountz.xxhash.XXHashFactory",
      "net.jpountz.util.Native",
      "net.jpountz.util.Utils",
      "net.jpountz.xxhash.XXHash32",
      "net.jpountz.xxhash.XXHash32JavaUnsafe",
      "net.jpountz.xxhash.StreamingXXHash32JavaUnsafe$Factory",
      "net.jpountz.xxhash.XXHash64",
      "net.jpountz.xxhash.XXHash64JavaUnsafe",
      "net.jpountz.xxhash.StreamingXXHash64JavaUnsafe$Factory",
      "net.jpountz.util.UnsafeUtils",
      "net.jpountz.util.SafeUtils",
      "net.jpountz.xxhash.StreamingXXHash32",
      "net.jpountz.xxhash.AbstractStreamingXXHash32Java",
      "net.jpountz.xxhash.StreamingXXHash32JavaUnsafe",
      "net.jpountz.xxhash.StreamingXXHash64",
      "net.jpountz.xxhash.AbstractStreamingXXHash64Java",
      "net.jpountz.xxhash.StreamingXXHash64JavaUnsafe",
      "org.mapdb.CC",
      "org.mapdb.serializer.SerializerByteArray",
      "org.mapdb.serializer.SerializerByteArrayDelta",
      "org.mapdb.serializer.SerializerByteArrayDelta2",
      "org.mapdb.serializer.SerializerByteArrayNoSize",
      "org.mapdb.serializer.SerializerCharArray",
      "org.mapdb.serializer.SerializerIntArray",
      "org.mapdb.serializer.SerializerDoubleArray",
      "org.mapdb.serializer.SerializerJava",
      "org.mapdb.serializer.SerializerElsa",
      "org.mapdb.elsa.ElsaSerializerBase$Ser",
      "org.mapdb.elsa.ElsaSerializerBase$74",
      "org.mapdb.elsa.ElsaSerializerBase$75",
      "org.mapdb.elsa.ElsaSerializerBase$76",
      "org.mapdb.elsa.ElsaSerializerBase$77",
      "org.mapdb.elsa.ElsaSerializerBase$78",
      "org.mapdb.elsa.ElsaSerializerBase$79",
      "org.mapdb.elsa.ElsaSerializerBase$80",
      "org.mapdb.elsa.ElsaSerializerBase$81",
      "org.mapdb.elsa.ElsaSerializerBase$82",
      "org.mapdb.elsa.ElsaSerializerBase$83",
      "org.mapdb.elsa.ElsaSerializerBase$84",
      "org.mapdb.elsa.ElsaSerializerBase$85",
      "org.mapdb.elsa.ElsaSerializerBase$Deser",
      "org.mapdb.elsa.ElsaSerializerBase$86",
      "org.mapdb.elsa.ElsaSerializerBase",
      "org.mapdb.elsa.ElsaSerializerPojo",
      "org.mapdb.elsa.ElsaSerializerBase$DeserSingleton",
      "org.mapdb.elsa.ElsaSerializerBase$21",
      "org.mapdb.elsa.ElsaSerializerBase$22",
      "org.mapdb.elsa.ElsaSerializerBase$23",
      "org.mapdb.elsa.ElsaSerializerBase$24",
      "org.mapdb.elsa.ElsaSerializerBase$25",
      "org.mapdb.elsa.ElsaSerializerBase$26",
      "org.mapdb.elsa.ElsaSerializerBase$27",
      "org.mapdb.elsa.ElsaSerializerBase$28",
      "org.mapdb.elsa.ElsaSerializerBase$29",
      "org.mapdb.elsa.ElsaSerializerBase$30",
      "org.mapdb.elsa.ElsaSerializerBase$DeserStringLen",
      "org.mapdb.elsa.ElsaSerializerBase$31",
      "org.mapdb.elsa.ElsaSerializerBase$32",
      "org.mapdb.elsa.ElsaSerializerBase$33",
      "org.mapdb.elsa.ElsaSerializerBase$34",
      "org.mapdb.elsa.ElsaSerializerBase$35",
      "org.mapdb.elsa.ElsaSerializerBase$36",
      "org.mapdb.elsa.ElsaSerializerBase$37",
      "org.mapdb.elsa.ElsaSerializerBase$38",
      "org.mapdb.elsa.ElsaSerializerBase$39",
      "org.mapdb.elsa.ElsaSerializerBase$40",
      "org.mapdb.elsa.ElsaSerializerBase$41",
      "org.mapdb.elsa.ElsaSerializerBase$42",
      "org.mapdb.elsa.ElsaSerializerBase$43",
      "org.mapdb.elsa.ElsaSerializerBase$44",
      "org.mapdb.elsa.ElsaSerializerBase$45",
      "org.mapdb.elsa.ElsaSerializerBase$46",
      "org.mapdb.elsa.ElsaSerializerBase$47",
      "org.mapdb.elsa.ElsaSerializerBase$48",
      "org.mapdb.elsa.ElsaSerializerBase$49",
      "org.mapdb.elsa.ElsaSerializerBase$50",
      "org.mapdb.elsa.ElsaSerializerBase$51",
      "org.mapdb.elsa.ElsaSerializerBase$52",
      "org.mapdb.elsa.ElsaSerializerBase$53",
      "org.mapdb.elsa.ElsaSerializerBase$54",
      "org.mapdb.elsa.ElsaSerializerBase$55",
      "org.mapdb.elsa.ElsaSerializerBase$56",
      "org.mapdb.elsa.ElsaSerializerBase$57",
      "org.mapdb.elsa.ElsaSerializerBase$58",
      "org.mapdb.elsa.ElsaSerializerBase$59",
      "org.mapdb.elsa.ElsaSerializerBase$60",
      "org.mapdb.elsa.ElsaSerializerBase$61",
      "org.mapdb.elsa.ElsaSerializerBase$62",
      "org.mapdb.elsa.ElsaSerializerBase$63",
      "org.mapdb.elsa.ElsaSerializerBase$64",
      "org.mapdb.elsa.ElsaSerializerBase$65",
      "org.mapdb.elsa.ElsaSerializerBase$66",
      "org.mapdb.elsa.ElsaSerializerBase$67",
      "org.mapdb.elsa.ElsaSerializerBase$68",
      "org.mapdb.elsa.ElsaSerializerBase$69",
      "org.mapdb.elsa.ElsaSerializerBase$70",
      "org.mapdb.elsa.ElsaSerializerBase$71",
      "org.mapdb.elsa.ElsaSerializerBase$72",
      "org.mapdb.elsa.ElsaSerializerBase$73",
      "org.mapdb.elsa.ElsaSerializerBase$DeserInt",
      "org.mapdb.elsa.ElsaSerializerBase$DeserLong",
      "org.mapdb.elsa.ElsaSerializerBase$1",
      "org.mapdb.elsa.ElsaSerializerBase$2",
      "org.mapdb.elsa.ElsaSerializerBase$3",
      "org.mapdb.elsa.ElsaSerializerBase$4",
      "org.mapdb.elsa.ElsaSerializerBase$5",
      "org.mapdb.elsa.ElsaSerializerBase$6",
      "org.mapdb.elsa.ElsaSerializerBase$7",
      "org.mapdb.elsa.ElsaSerializerBase$8",
      "org.mapdb.elsa.ElsaSerializerBase$9",
      "org.mapdb.elsa.ElsaSerializerBase$10",
      "org.mapdb.elsa.ElsaSerializerBase$11",
      "org.mapdb.elsa.ElsaSerializerBase$12",
      "org.mapdb.elsa.ElsaSerializerBase$13",
      "org.mapdb.elsa.ElsaSerializerBase$14",
      "org.mapdb.elsa.ElsaSerializerBase$15",
      "org.mapdb.elsa.ElsaSerializerBase$16",
      "org.mapdb.elsa.ElsaSerializerBase$17",
      "org.mapdb.elsa.ElsaSerializerBase$18",
      "org.mapdb.elsa.ElsaSerializerBase$19",
      "org.mapdb.elsa.ElsaSerializerBase$20",
      "org.mapdb.elsa.ElsaClassCallback$1",
      "org.mapdb.elsa.ElsaClassCallback",
      "org.mapdb.elsa.ElsaClassInfoResolver$1",
      "org.mapdb.elsa.ElsaClassInfoResolver",
      "org.mapdb.serializer.SerializerUUID",
      "org.mapdb.serializer.SerializerByte",
      "org.mapdb.serializer.SerializerFloat",
      "org.mapdb.serializer.SerializerDouble",
      "org.mapdb.serializer.SerializerShort",
      "org.mapdb.serializer.SerializerShortArray",
      "org.mapdb.serializer.SerializerFloatArray",
      "org.mapdb.serializer.SerializerBigInteger",
      "org.mapdb.serializer.SerializerBigDecimal",
      "org.mapdb.serializer.SerializerClass",
      "org.mapdb.serializer.SerializerDate",
      "org.mapdb.Serializer",
      "org.mapdb.DB$Companion$NAME_CATALOG_SERIALIZER$1",
      "org.mapdb.DB",
      "com.google.common.cache.CacheBuilder$1",
      "com.google.common.base.Suppliers",
      "com.google.common.base.Suppliers$SupplierOfInstance",
      "com.google.common.cache.CacheStats",
      "com.google.common.base.Preconditions",
      "com.google.common.cache.CacheBuilder$2",
      "com.google.common.base.Ticker$1",
      "com.google.common.base.Ticker",
      "com.google.common.cache.CacheBuilder$3",
      "com.google.common.cache.CacheBuilder",
      "com.google.common.cache.LocalCache$Strength",
      "com.google.common.cache.LocalCache$LocalManualCache",
      "com.google.common.cache.LocalCache$1",
      "com.google.common.cache.LocalCache$2",
      "com.google.common.cache.LocalCache",
      "com.google.common.base.MoreObjects",
      "com.google.common.base.Equivalence",
      "com.google.common.base.Equivalence$Equals",
      "com.google.common.base.Equivalence$Identity",
      "com.google.common.cache.CacheBuilder$OneWeigher",
      "com.google.common.cache.CacheBuilder$NullListener",
      "com.google.common.cache.LocalCache$EntryFactory",
      "com.google.common.cache.LocalCache$Segment",
      "org.mapdb.DB$nameSer$1",
      "org.mapdb.DB$nameDeser$1",
      "kotlin.Pair",
      "kotlin.collections.MapsKt__MapWithDefaultKt",
      "kotlin.collections.MapsKt__MapsJVMKt",
      "kotlin.collections.MapsKt__MapsKt",
      "org.mapdb.DB$elsaSerializer$3",
      "org.mapdb.DB$elsaSerializer$4",
      "org.mapdb.elsa.ElsaSerializerBase$UserSer",
      "org.mapdb.DB$defaultSerializer$1",
      "org.mapdb.DB$classInfoSerializer$1",
      "org.mapdb.DBException$WrongConfiguration",
      "org.mapdb.DB$nameCatalogVerifyTree$all$1",
      "org.mapdb.DB$nameCatalogVerifyTree$recid$1",
      "org.mapdb.DB$nameCatalogVerifyTree$recidOptional$1",
      "org.mapdb.DB$nameCatalogVerifyTree$long$1",
      "org.mapdb.DB$nameCatalogVerifyTree$int$1",
      "org.mapdb.DB$nameCatalogVerifyTree$boolean$1",
      "org.mapdb.DB$Keys",
      "org.mapdb.DB$CatVal",
      "org.telegram.abilitybots.api.bot.AbilityBot",
      "org.telegram.abilitybots.api.bot.DefaultBot",
      "org.telegram.telegrambots.bots.DefaultBotOptions",
      "org.apache.http.protocol.HttpCoreContext",
      "org.apache.http.client.protocol.HttpClientContext",
      "org.apache.http.protocol.BasicHttpContext",
      "org.telegram.telegrambots.bots.DefaultBotOptions$ProxyType",
      "com.fasterxml.jackson.core.TreeCodec",
      "com.fasterxml.jackson.core.ObjectCodec",
      "com.fasterxml.jackson.core.type.ResolvedType",
      "com.fasterxml.jackson.databind.JavaType",
      "com.fasterxml.jackson.databind.type.TypeBindings",
      "com.fasterxml.jackson.databind.type.TypeBase",
      "com.fasterxml.jackson.databind.type.SimpleType",
      "com.fasterxml.jackson.databind.AnnotationIntrospector",
      "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "com.fasterxml.jackson.databind.ext.Java7Support",
      "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
      "com.fasterxml.jackson.databind.util.LRUMap",
      "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
      "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
      "com.fasterxml.jackson.databind.cfg.BaseSettings",
      "com.fasterxml.jackson.databind.type.TypeParser",
      "com.fasterxml.jackson.databind.type.TypeFactory",
      "com.fasterxml.jackson.databind.util.StdDateFormat",
      "com.fasterxml.jackson.core.Base64Variant",
      "com.fasterxml.jackson.core.Base64Variants",
      "com.fasterxml.jackson.databind.ObjectMapper",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.databind.MappingJsonFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
      "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
      "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
      "com.fasterxml.jackson.databind.util.RootNameLookup",
      "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
      "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
      "com.fasterxml.jackson.databind.introspect.Annotated",
      "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
      "com.fasterxml.jackson.databind.introspect.AnnotationMap",
      "com.fasterxml.jackson.databind.BeanDescription",
      "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
      "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
      "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
      "com.fasterxml.jackson.annotation.JsonInclude$Value",
      "com.fasterxml.jackson.annotation.JsonFormat$Shape",
      "com.fasterxml.jackson.annotation.JsonFormat$Features",
      "com.fasterxml.jackson.annotation.JsonFormat$Value",
      "com.fasterxml.jackson.databind.cfg.MapperConfig",
      "com.fasterxml.jackson.databind.MapperFeature",
      "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
      "com.fasterxml.jackson.core.util.DefaultIndenter",
      "com.fasterxml.jackson.databind.SerializationConfig",
      "com.fasterxml.jackson.databind.cfg.ContextAttributes",
      "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
      "com.fasterxml.jackson.databind.SerializationFeature",
      "com.fasterxml.jackson.databind.DeserializationConfig",
      "org.telegram.abilitybots.api.objects.Ability",
      "org.telegram.abilitybots.api.objects.Ability$AbilityBuilder",
      "com.google.common.collect.Lists",
      "com.fasterxml.jackson.databind.DeserializationFeature",
      "com.fasterxml.jackson.databind.node.JsonNodeFactory",
      "com.fasterxml.jackson.databind.DatabindContext",
      "com.fasterxml.jackson.databind.JsonSerializer",
      "com.fasterxml.jackson.databind.ser.std.StdSerializer",
      "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
      "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
      "com.fasterxml.jackson.databind.SerializerProvider",
      "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
      "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
      "com.fasterxml.jackson.databind.ser.std.NullSerializer",
      "com.fasterxml.jackson.databind.ser.SerializerCache",
      "com.fasterxml.jackson.databind.DeserializationContext",
      "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
      "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
      "com.fasterxml.jackson.databind.deser.DeserializerFactory",
      "com.fasterxml.jackson.databind.PropertyName",
      "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
      "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
      "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
      "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
      "com.fasterxml.jackson.databind.deser.DeserializerCache",
      "com.fasterxml.jackson.databind.ser.SerializerFactory",
      "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
      "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase",
      "com.fasterxml.jackson.databind.ser.std.StringSerializer",
      "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
      "com.fasterxml.jackson.core.JsonParser$NumberType",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
      "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
      "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
      "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
      "com.fasterxml.jackson.databind.ser.std.DateSerializer",
      "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
      "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
      "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
      "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
      "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
      "org.mapdb.StoreOnHeap$Companion",
      "org.mapdb.StoreOnHeap",
      "org.eclipse.collections.impl.stack.mutable.primitive.LongArrayStack",
      "org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap$SentinelValues",
      "org.eclipse.collections.impl.block.factory.Functions0$TrueFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$FalseFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$NewFastListFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$NewUnifiedSetFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$NewHashBagFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$NewUnifiedMapFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$NullFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$AtomicIntegerZeroFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$AtomicLongZeroFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$IntegerZeroFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$BigDecimalZeroFunction",
      "org.eclipse.collections.impl.block.factory.Functions0$BigIntegerZeroFunction",
      "org.eclipse.collections.impl.block.factory.Functions0",
      "kotlin.collections.CollectionsKt__CollectionsKt",
      "kotlin.collections.CollectionsKt__IterablesKt",
      "kotlin.collections.CollectionsKt__IteratorsKt",
      "kotlin.collections.CollectionsKt__MutableCollectionsKt",
      "kotlin.collections.CollectionsKt__ReversedViewsKt",
      "kotlin.collections.CollectionsKt___CollectionsKt",
      "kotlin.collections.SetsKt__SetsKt",
      "kotlin.collections.EmptySet",
      "kotlin.collections.EmptyIterator",
      "kotlin.collections.EmptyList",
      "org.telegram.telegrambots.facilities.TelegramHttpClientBuilder",
      "org.apache.http.impl.client.HttpClientBuilder",
      "org.apache.http.conn.ssl.NoopHostnameVerifier",
      "org.telegram.telegrambots.facilities.TelegramHttpClientBuilder$1",
      "org.apache.http.conn.util.PublicSuffixMatcherLoader",
      "org.apache.http.conn.util.PublicSuffixListParser",
      "org.apache.http.conn.util.DomainType",
      "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
      "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder",
      "com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
      "org.mapdb.StoreTrivial$Companion",
      "org.mapdb.StoreTrivial",
      "org.mapdb.DataOutput2",
      "org.mapdb.DataInput2",
      "org.mapdb.DataInput2$ByteArray",
      "kotlin.ranges.IntProgression$Companion",
      "kotlin.ranges.IntProgression",
      "kotlin.ranges.IntRange$Companion",
      "kotlin.ranges.IntRange",
      "org.mapdb.volume.ByteBufferVol",
      "org.mapdb.volume.ByteBufferMemoryVol$1",
      "org.mapdb.volume.ByteBufferMemoryVol$2",
      "org.mapdb.volume.ByteBufferMemoryVol",
      "org.telegram.abilitybots.api.bot.AbilityBotI18nTest$NoPublicCommandsBot",
      "org.mapdb.volume.MappedFileVol$MappedFileFactory",
      "org.mapdb.volume.MappedFileVol",
      "org.mapdb.volume.FileChannelVol$1",
      "org.mapdb.volume.FileChannelVol",
      "org.mapdb.StoreReadOnlyWrapper",
      "org.mapdb.DBException$GetVoid",
      "kotlin.text.Regex$Companion",
      "kotlin.text.Regex",
      "kotlin.text.RegexOption",
      "kotlin.text.Regex$fromInt$$inlined$apply$lambda$1",
      "kotlin.jvm.internal.Ref$BooleanRef",
      "org.mapdb.serializer.SerializerCompressionDeflateWrapper",
      "org.mapdb.serializer.SerializerCompressionWrapper",
      "org.mapdb.serializer.SerializerCompressionWrapper$1",
      "org.mapdb.StoreTrivialTx$Companion",
      "org.mapdb.StoreTrivialTx",
      "org.mapdb.StoreDirect$Companion",
      "org.mapdb.StoreDirect",
      "org.mapdb.StoreDirect$volume$1",
      "org.mapdb.DBException$DataCorruption",
      "kotlin.Unit",
      "org.mapdb.StoreWAL$commit$1",
      "org.mapdb.DB$Companion$addShutdownHook$1",
      "org.mapdb.DB$Maker",
      "org.mapdb.DB$HashMapMaker",
      "org.mapdb.DB$HashMapMaker$1",
      "org.mapdb.IndexTreeListJava$1",
      "org.mapdb.IndexTreeListJava",
      "kotlin.jvm.internal.Ref$ObjectRef",
      "org.mapdb.DB$HashMapMaker$create2$1",
      "org.mapdb.IndexTreeLongLongMap$Companion",
      "org.mapdb.IndexTreeLongLongMap",
      "org.mapdb.AbstractMutableLongCollection",
      "org.mapdb.IndexTreeLongLongMap$keySet$1",
      "org.eclipse.collections.impl.lazy.primitive.AbstractLazyLongIterable",
      "org.eclipse.collections.impl.lazy.primitive.LazyLongIterableAdapter",
      "org.eclipse.collections.impl.AbstractRichIterable",
      "org.eclipse.collections.impl.lazy.AbstractLazyIterable",
      "org.mapdb.IndexTreeLongLongMap$keysValuesView$1",
      "org.mapdb.IndexTreeLongLongMap$values$1",
      "org.mapdb.HTreeMap$Companion",
      "org.mapdb.HTreeMap",
      "org.mapdb.BTreeMap$Companion",
      "org.mapdb.BTreeMap$Companion$NO_VAL_SERIALIZER$1",
      "org.mapdb.BTreeMap",
      "org.mapdb.HTreeMap$leafValueExternalSerializer$1",
      "org.mapdb.HTreeMap$entries$1",
      "org.mapdb.HTreeMap$KeySet",
      "org.mapdb.HTreeMap$values$1",
      "com.google.common.cache.LocalCache$AbstractReferenceEntry",
      "com.google.common.cache.LocalCache$StrongEntry",
      "com.google.common.cache.LocalCache$WeakValueReference",
      "org.mapdb.Store$DefaultImpls",
      "org.mapdb.ConcurrencyAware$DefaultImpls",
      "org.mapdb.DBException$OutOfMemory",
      "org.telegram.telegrambots.meta.api.objects.Update",
      "org.telegram.telegrambots.meta.api.methods.PartialBotApiMethod",
      "org.telegram.telegrambots.meta.api.methods.send.SendVoice",
      "org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup",
      "org.telegram.telegrambots.meta.api.objects.Message",
      "org.telegram.abilitybots.api.util.Trio",
      "org.mapdb.volume.ReadOnlyVolumeFactory",
      "org.mapdb.volume.VolumeFactory$1",
      "org.telegram.telegrambots.meta.api.methods.send.SendVideoNote",
      "org.telegram.telegrambots.meta.api.objects.InputFile",
      "org.telegram.telegrambots.meta.api.objects.File",
      "org.telegram.telegrambots.meta.api.methods.BotApiMethod",
      "org.telegram.telegrambots.meta.api.methods.GetMe",
      "com.fasterxml.jackson.core.type.TypeReference",
      "org.telegram.telegrambots.meta.api.methods.GetMe$1",
      "org.telegram.telegrambots.meta.api.methods.send.SendAnimation",
      "org.telegram.telegrambots.meta.api.methods.stickers.UploadStickerFile",
      "org.telegram.telegrambots.meta.api.methods.send.SendPhoto",
      "org.telegram.telegrambots.meta.api.methods.GetUserProfilePhotos",
      "org.mapdb.volume.ByteBufferVolSingle",
      "org.mapdb.volume.MappedFileVolSingle$1",
      "org.mapdb.volume.MappedFileVolSingle$2",
      "org.mapdb.volume.MappedFileVolSingle",
      "org.mapdb.StoreWAL$commit$2",
      "org.mapdb.StoreWAL$commit$3",
      "org.mapdb.StoreWAL$commit$4",
      "org.mapdb.StoreDirectJava"
    );
  }
}
