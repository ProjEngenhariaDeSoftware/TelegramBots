/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Oct 22 18:47:48 GMT 2018
 */

package org.telegram.abilitybots.api.objects;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Ability_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.telegram.abilitybots.api.objects.Ability"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/felipe/eclipse-workspace/TelegramBots/telegrambots-abilities"); 
    java.lang.System.setProperty("user.home", "/home/felipe"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "felipe"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Ability_ESTest_scaffolding.class.getClassLoader() ,
      "org.telegram.telegrambots.meta.api.objects.payments.SuccessfulPayment",
      "com.google.common.collect.ImmutableList$SubList",
      "org.telegram.telegrambots.meta.api.objects.inlinequery.InlineQuery",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.ImmutableCollection",
      "org.telegram.telegrambots.meta.api.objects.payments.OrderInfo",
      "org.apache.commons.lang3.StringUtils",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.fasterxml.jackson.annotation.JacksonAnnotation",
      "org.telegram.telegrambots.meta.api.objects.Chat",
      "com.fasterxml.jackson.annotation.JsonInclude$Include",
      "com.google.common.collect.RegularImmutableList",
      "org.telegram.telegrambots.meta.api.objects.Audio",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "org.telegram.telegrambots.meta.api.objects.Venue",
      "org.telegram.telegrambots.meta.api.objects.Update",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.ImmutableCollection$Builder",
      "org.telegram.telegrambots.meta.api.objects.User",
      "com.google.common.base.Function",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.AbstractIndexedListIterator",
      "org.telegram.telegrambots.meta.api.objects.Video",
      "org.telegram.telegrambots.meta.api.objects.CallbackQuery",
      "org.telegram.telegrambots.meta.api.objects.payments.Invoice",
      "org.telegram.telegrambots.meta.api.objects.payments.PreCheckoutQuery",
      "org.telegram.telegrambots.meta.api.objects.VideoNote",
      "org.telegram.abilitybots.api.objects.Ability",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "org.telegram.telegrambots.meta.api.objects.Document",
      "com.google.common.collect.Lists$2",
      "org.telegram.telegrambots.meta.api.objects.Location",
      "com.google.common.collect.Lists$1",
      "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
      "com.google.common.collect.ImmutableList$Builder",
      "org.telegram.telegrambots.meta.logging.BotLogger",
      "com.google.common.collect.ImmutableAsList",
      "org.telegram.telegrambots.meta.api.objects.stickers.Sticker",
      "com.google.common.collect.RegularImmutableAsList",
      "org.telegram.telegrambots.meta.api.objects.Message",
      "org.telegram.telegrambots.meta.api.objects.MessageEntity",
      "org.telegram.abilitybots.api.objects.MessageContext",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.Lists",
      "com.google.common.collect.ImmutableList",
      "org.telegram.telegrambots.meta.api.interfaces.BotApiObject",
      "com.google.common.collect.UnmodifiableListIterator",
      "org.telegram.telegrambots.meta.api.objects.Voice",
      "org.telegram.abilitybots.api.objects.Ability$AbilityBuilder",
      "org.telegram.abilitybots.api.objects.Privacy",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "org.telegram.telegrambots.meta.api.objects.inlinequery.ChosenInlineQuery",
      "com.google.common.collect.ObjectArrays",
      "org.telegram.abilitybots.api.objects.Locality",
      "org.telegram.telegrambots.meta.api.objects.passport.PassportData",
      "org.telegram.telegrambots.meta.api.objects.payments.ShippingQuery",
      "com.google.common.collect.ImmutableList$1",
      "org.telegram.telegrambots.meta.api.objects.games.Game",
      "org.telegram.abilitybots.api.objects.Reply",
      "org.telegram.telegrambots.meta.api.objects.Contact",
      "com.fasterxml.jackson.annotation.JsonInclude",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "org.telegram.telegrambots.meta.api.objects.games.Animation",
      "org.telegram.telegrambots.meta.api.objects.payments.ShippingAddress"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Ability_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.telegram.abilitybots.api.objects.Ability",
      "org.telegram.abilitybots.api.objects.Ability$AbilityBuilder",
      "org.telegram.telegrambots.meta.logging.BotLogger",
      "com.google.common.collect.Lists",
      "org.apache.commons.lang3.StringUtils",
      "com.google.common.base.Preconditions",
      "org.telegram.abilitybots.api.objects.Reply"
    );
  }
}
