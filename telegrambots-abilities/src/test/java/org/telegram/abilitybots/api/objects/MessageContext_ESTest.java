/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 22 18:47:42 GMT 2018
 */

package org.telegram.abilitybots.api.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.abilitybots.api.objects.MessageContext;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.User;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageContext_ESTest extends MessageContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(user0).toString();
      Long long0 = new Long((-793L));
      String[] stringArray0 = new String[2];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, user0, long0, stringArray0);
      User user1 = messageContext0.user();
      assertEquals(0, (int)user1.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      stringArray0[2] = "chatId";
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.thirdArg();
      assertEquals("chatId", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long(1L);
      String[] stringArray0 = new String[6];
      stringArray0[2] = "";
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.thirdArg();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      stringArray0[1] = "chatId";
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.secondArg();
      assertEquals("chatId", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(update0).toString();
      Long long0 = new Long((-1015L));
      String[] stringArray0 = new String[3];
      stringArray0[1] = "";
      MessageContext messageContext0 = MessageContext.newContext(update0, (User) null, long0, stringArray0);
      String string0 = messageContext0.secondArg();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-1304L));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NC~s-";
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.firstArg();
      assertEquals("NC~s-", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.firstArg();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, (Long) null, (String[]) null);
      Long long0 = messageContext0.chatId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(1L);
      String[] stringArray0 = new String[1];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      Long long1 = messageContext0.chatId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[0];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      Long long1 = messageContext0.chatId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      Long long1 = messageContext0.chatId();
      assertEquals((-1085L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(update0).toString();
      Long long0 = new Long(0L);
      MessageContext messageContext0 = MessageContext.newContext(update0, (User) null, long0, (String[]) null);
      String[] stringArray0 = messageContext0.arguments();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[0];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String[] stringArray1 = messageContext0.arguments();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(update0).toString();
      Long long0 = new Long(0L);
      MessageContext messageContext0 = MessageContext.newContext(update0, (User) null, long0, (String[]) null);
      // Undeclared exception!
      try { 
        messageContext0.thirdArg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.abilitybots.api.objects.MessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(update0).toString();
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[0];
      MessageContext messageContext0 = MessageContext.newContext(update0, (User) null, long0, stringArray0);
      // Undeclared exception!
      try { 
        messageContext0.thirdArg();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This message has no arguments
         //
         verifyException("org.telegram.abilitybots.api.objects.MessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, (Long) null, (String[]) null);
      // Undeclared exception!
      try { 
        messageContext0.secondArg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.abilitybots.api.objects.MessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, (Long) null, (String[]) null);
      // Undeclared exception!
      try { 
        messageContext0.firstArg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.abilitybots.api.objects.MessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Long long0 = new Long(2680L);
      String[] stringArray0 = new String[0];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      // Undeclared exception!
      try { 
        messageContext0.firstArg();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This message has no arguments
         //
         verifyException("org.telegram.abilitybots.api.objects.MessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      MessageContext messageContext1 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      boolean boolean0 = messageContext1.equals(messageContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[0];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, (Long) null, stringArray0);
      Long long0 = new Long(1231L);
      MessageContext messageContext1 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      boolean boolean0 = messageContext0.equals(messageContext1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      boolean boolean0 = messageContext0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      boolean boolean0 = messageContext0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      boolean boolean0 = messageContext0.equals(messageContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String[] stringArray1 = new String[8];
      MessageContext messageContext1 = MessageContext.newContext((Update) null, (User) null, long0, stringArray1);
      boolean boolean0 = messageContext0.equals(messageContext1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[0];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      // Undeclared exception!
      try { 
        messageContext0.secondArg();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This message has no arguments
         //
         verifyException("org.telegram.abilitybots.api.objects.MessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.thirdArg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      Update update0 = messageContext0.update();
      assertNull(update0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String[] stringArray1 = messageContext0.arguments();
      assertSame(stringArray0, stringArray1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.toString();
      assertEquals("MessageContext{user=null, chatId=-1085, arguments=[null, null, null, null], update=null}", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.firstArg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Long long0 = new Long((-1210L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      messageContext0.hashCode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      String string0 = messageContext0.secondArg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Long long0 = new Long((-1085L));
      String[] stringArray0 = new String[4];
      MessageContext messageContext0 = MessageContext.newContext((Update) null, (User) null, long0, stringArray0);
      User user0 = messageContext0.user();
      assertNull(user0);
  }
}
