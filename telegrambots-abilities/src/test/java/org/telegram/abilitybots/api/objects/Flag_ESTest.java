/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 22 18:49:03 GMT 2018
 */

package org.telegram.abilitybots.api.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.telegram.abilitybots.api.objects.Flag;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Flag_ESTest extends Flag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Flag[] flagArray0 = Flag.values();
      assertEquals(14, flagArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Flag flag0 = Flag.valueOf("LOCATION");
      assertEquals(Flag.LOCATION, flag0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Flag flag0 = Flag.EDITED_CHANNEL_POST;
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(update0).hasEditedChannelPost();
      boolean boolean0 = flag0.test(update0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Flag flag0 = Flag.EDITED_MESSAGE;
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(update0).hasEditedMessage();
      boolean boolean0 = flag0.test(update0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Flag flag0 = Flag.DOCUMENT;
      Update update0 = mock(Update.class, new ViolatedAssumptionAnswer());
      doReturn((Message) null).when(update0).getMessage();
      // Undeclared exception!
      try { 
        flag0.test(update0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.telegram.abilitybots.api.objects.Flag", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Flag flag0 = Flag.REPLY;
      boolean boolean0 = flag0.test((Update) null);
      assertFalse(boolean0);
  }
}
